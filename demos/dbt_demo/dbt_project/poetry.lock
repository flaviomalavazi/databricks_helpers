[[package]]
name = "agate"
version = "1.7.1"
description = "A data analysis library that is optimized for humans instead of machines."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Babel = ">=2.0"
isodate = ">=0.5.4"
leather = ">=0.3.2"
parsedatetime = ">=2.1,<2.5 || >2.5"
python-slugify = ">=1.2.1"
pytimeparse = ">=1.1.5"

[package.extras]
docs = ["Sphinx (>=1.2.2)", "sphinx-rtd-theme (>=0.1.6)"]
test = ["coverage (>=3.7.1)", "cssselect (>=0.9.1)", "lxml (>=3.6.0)", "pytest", "pytest-cov", "pytz (>=2015.4)", "PyICU (>=2.4.2)"]

[[package]]
name = "aiohttp"
version = "3.9.1"
description = "Async http client/server framework (asyncio)"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
aiosignal = ">=1.1.2"
async-timeout = {version = ">=4.0,<5.0", markers = "python_version < \"3.11\""}
attrs = ">=17.3.0"
frozenlist = ">=1.1.1"
multidict = ">=4.5,<7.0"
yarl = ">=1.0,<2.0"

[package.extras]
speedups = ["brotlicffi", "brotli", "aiodns"]

[[package]]
name = "aiosignal"
version = "1.3.1"
description = "aiosignal: a list of registered asynchronous callbacks"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
frozenlist = ">=1.1.0"

[[package]]
name = "alembic"
version = "1.13.0"
description = "A database migration tool for SQLAlchemy."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
importlib-metadata = {version = "*", markers = "python_version < \"3.9\""}
importlib-resources = {version = "*", markers = "python_version < \"3.9\""}
Mako = "*"
SQLAlchemy = ">=1.3.0"
typing-extensions = ">=4"

[package.extras]
tz = ["backports.zoneinfo"]

[[package]]
name = "anyio"
version = "4.2.0"
description = "High level compatibility layer for multiple asynchronous event loop implementations"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
exceptiongroup = {version = ">=1.0.2", markers = "python_version < \"3.11\""}
idna = ">=2.8"
sniffio = ">=1.1"
typing-extensions = {version = ">=4.1", markers = "python_version < \"3.11\""}

[package.extras]
doc = ["packaging", "Sphinx (>=7)", "sphinx-rtd-theme", "sphinx-autodoc-typehints (>=1.2.0)"]
test = ["anyio", "coverage[toml] (>=7)", "exceptiongroup (>=1.2.0)", "hypothesis (>=4.0)", "psutil (>=5.9)", "pytest (>=7.0)", "pytest-mock (>=3.6.1)", "trustme", "uvloop (>=0.17)"]
trio = ["trio (>=0.23)"]

[[package]]
name = "apache-airflow"
version = "2.7.3"
description = "Programmatically author, schedule and monitor data pipelines"
category = "main"
optional = false
python-versions = "<3.12,~=3.8"

[package.dependencies]
alembic = ">=1.6.3,<2.0"
apache-airflow-providers-common-sql = "*"
apache-airflow-providers-ftp = "*"
apache-airflow-providers-http = "*"
apache-airflow-providers-imap = "*"
apache-airflow-providers-sqlite = "*"
argcomplete = ">=1.10"
asgiref = "*"
attrs = ">=22.1.0"
blinker = "*"
cattrs = ">=22.1.0"
colorlog = ">=4.0.2,<5.0"
configupdater = ">=3.1.1"
connexion = {version = ">=2.10.0,<3.0", extras = ["flask"]}
cron-descriptor = ">=1.2.24"
croniter = ">=0.3.17"
cryptography = ">=0.9.3"
deprecated = ">=1.2.13"
dill = ">=0.2.2"
flask = ">=2.2,<2.3"
flask-appbuilder = "4.3.6"
flask-caching = ">=1.5.0"
flask-login = ">=0.6.2"
flask-session = ">=0.4.0"
flask-wtf = ">=0.15"
google-re2 = ">=1.0"
graphviz = ">=0.12"
gunicorn = ">=20.1.0"
httpx = "*"
importlib-metadata = {version = ">=1.7", markers = "python_version < \"3.9\""}
importlib-resources = {version = ">=5.2", markers = "python_version < \"3.9\""}
itsdangerous = ">=2.0"
jinja2 = ">=3.0.0"
jsonschema = ">=4.18.0"
lazy-object-proxy = "*"
linkify-it-py = ">=2.0.0"
lockfile = ">=0.12.2"
markdown = ">=3.0"
markdown-it-py = ">=2.1.0"
markupsafe = ">=1.1.1"
marshmallow-oneofschema = ">=2.0.1"
mdit-py-plugins = ">=0.3.0"
opentelemetry-api = ">=1.15.0"
opentelemetry-exporter-otlp = "*"
packaging = ">=14.0"
pathspec = ">=0.9.0"
pendulum = ">=2.0,<3.0"
pluggy = ">=1.0"
psutil = ">=4.2.0"
pydantic = ">=1.10.0"
pygments = ">=2.0.1"
pyjwt = ">=2.0.0"
python-daemon = ">=3.0.0"
python-dateutil = ">=2.3"
python-nvd3 = ">=0.15.0"
python-slugify = ">=5.0"
rfc3339-validator = ">=0.1.4"
rich = ">=12.4.4"
rich-argparse = ">=1.0.0"
setproctitle = ">=1.1.8"
sqlalchemy = ">=1.4.28,<2.0"
sqlalchemy-jsonfield = ">=1.0"
tabulate = ">=0.7.5"
tenacity = ">=6.2.0,<8.2.0 || >8.2.0"
termcolor = ">=1.1.0"
typing-extensions = ">=4.0.0"
unicodecsv = ">=0.14.1"
werkzeug = ">=2.0"
WTForms = "<3.1.0"

[package.extras]
aiobotocore = ["aiobotocore (>=2.1.1)"]
airbyte = ["apache-airflow-providers-airbyte"]
alibaba = ["apache-airflow-providers-alibaba"]
all = ["PyGithub (!=1.58)", "pyopenssl", "adal (>=1.2.7)", "aiobotocore (>=2.1.1)", "aiohttp", "aiohttp (>=3.6.3,<4)", "alibabacloud-adb20211201 (>=1.0.0)", "alibabacloud-tea-openapi (>=0.3.7)", "amqp", "analytics-python (>=1.2.9)", "apache-airflow (>=2.4.0)", "apache-airflow (>=2.5.0)", "apache-airflow (>=2.7.0)", "apache-beam (>=2.47.0)", "apprise", "arrow (>=0.16.0)", "asana (>=0.10,<4.0.0)", "asgiref", "asgiref (>=3.5.2)", "atlasclient (>=0.1.2)", "atlassian-python-api (>=1.14.2)", "attrs (>=22.2)", "authlib (>=1.0.0)", "azure-batch (>=8.0.0)", "azure-cosmos (>=4.0.0)", "azure-datalake-store (>=0.0.45)", "azure-identity (>=1.3.1)", "azure-keyvault-secrets (>=4.1.0)", "azure-kusto-data (>=4.1.0)", "azure-mgmt-containerinstance (>=9.0.0)", "azure-mgmt-containerregistry (>=8.0.0)", "azure-mgmt-datafactory (>=2.0.0)", "azure-mgmt-datalake-store (>=0.5.0)", "azure-mgmt-resource (>=2.2.0)", "azure-servicebus (>=7.6.1)", "azure-storage-blob (>=12.14.0)", "azure-storage-common (>=2.1.0)", "azure-storage-file-datalake (>=12.9.1)", "azure-storage-file (>=2.1.0)", "azure-synapse-spark", "bcrypt (>=2.0.0)", "blinker (>=1.1)", "boto3 (>=1.28.0)", "botocore (>=1.31.0)", "cassandra-driver (>=3.13.0)", "celery (>=5.3.0,!=5.3.2,!=5.3.3,<6)", "cgroupspy (>=0.2.2)", "cloudant (>=2.0)", "cloudpickle (>=1.4.1)", "confluent-kafka (>=1.8.2)", "cryptography (>=2.0.0)", "dask (>=2.9.0,!=2022.10.1,!=2023.5.0)", "databricks-sql-connector (>=2.0.0,<3.0.0)", "datadog (>=0.14.0)", "distributed (>=2.11.1,!=2023.5.0)", "dnspython (>=1.13.0)", "docker (>=5.0.3)", "elasticsearch (>8,<9)", "eventlet (>=0.33.3)", "facebook-business (>=6.0.2)", "flask-appbuilder[oauth] (==4.3.6)", "flask-bcrypt (>=0.7.1)", "flower (>=1.0.0)", "gcloud-aio-auth (>=4.0.0,<5.0.0)", "gcloud-aio-bigquery (>=6.1.2)", "gcloud-aio-storage", "gevent (>=0.13)", "google-ads (>=21.2.0)", "google-api-core (>=2.11.0)", "google-api-python-client (>=1.6.0)", "google-auth-httplib2 (>=0.0.1)", "google-auth (>=1.0.0)", "google-auth (>=1.0.0,<3.0.0)", "google-cloud-aiplatform (>=1.22.1)", "google-cloud-automl (>=2.11.0)", "google-cloud-bigquery-datatransfer (>=3.11.0)", "google-cloud-bigtable (>=2.17.0)", "google-cloud-build (>=3.13.0)", "google-cloud-compute (>=1.10.0)", "google-cloud-container (>=2.17.4)", "google-cloud-datacatalog (>=3.11.1)", "google-cloud-dataflow-client (>=0.8.2)", "google-cloud-dataform (>=0.5.0)", "google-cloud-dataplex (>=1.4.2)", "google-cloud-dataproc-metastore (>=1.12.0)", "google-cloud-dataproc (>=5.4.0)", "google-cloud-dlp (>=3.12.0)", "google-cloud-kms (>=2.15.0)", "google-cloud-language (>=2.9.0)", "google-cloud-logging (>=3.5.0)", "google-cloud-memcache (>=1.7.0)", "google-cloud-monitoring (>=2.14.1)", "google-cloud-orchestration-airflow (>=1.7.0)", "google-cloud-os-login (>=2.9.1)", "google-cloud-pubsub (>=2.15.0)", "google-cloud-redis (>=2.12.0)", "google-cloud-secret-manager (>=2.16.0)", "google-cloud-spanner (>=3.11.1)", "google-cloud-speech (>=2.18.0)", "google-cloud-storage-transfer (>=1.4.1)", "google-cloud-storage (>=2.7.0)", "google-cloud-tasks (>=2.13.0)", "google-cloud-texttospeech (>=2.14.1)", "google-cloud-translate (>=3.11.0)", "google-cloud-videointelligence (>=2.11.0)", "google-cloud-vision (>=3.4.0)", "google-cloud-workflows (>=1.10.0)", "greenlet (>=0.4.9)", "grpcio-gcp (>=0.2.2)", "grpcio (>=1.15.0)", "hdfs[avro,kerberos,dataframe] (>=2.0.4)", "hmsclient (>=0.1.0)", "httpx", "hvac (>=0.10)", "impyla (>=0.18.0,<1.0)", "influxdb-client (>=1.19.0)", "jaydebeapi (>=1.1.1)", "json-merge-patch (>=0.2)", "jsonpath-ng (>=1.5.3)", "kubernetes (>=21.7.0,<24)", "kubernetes-asyncio (>=18.20.1,<25)", "kylinpy (>=2.6)", "ldap3 (>=2.5.1)", "looker-sdk (>=22.2.0)", "mysqlclient (>=1.3.6)", "neo4j (>=4.2.1)", "openlineage-integration-common (>=0.28.0)", "openlineage-python (>=0.28.0)", "opensearch-py (>=2.2.0)", "opentelemetry-exporter-prometheus", "opsgenie-sdk (>=2.1.5)", "oracledb (>=1.0.0)", "oss2 (>=2.14.0)", "pandas-gbq", "pandas (>=0.17.1)", "papermill[all] (>=1.2.1)", "paramiko (>=2.6.0)", "pdpyras (>=4.1.2)", "pinotdb (>0.4.7)", "plyvel", "presto-python-client (>=0.8.4)", "proto-plus (>=1.19.6)", "psycopg2-binary (>=2.8.0)", "pyarrow (>=9.0.0)", "pydruid (>=0.4.1)", "pyexasol (>=0.5.1)", "pyhive[hive_pure_sasl] (>=0.7.0)", "pykerberos (>=1.1.13)", "pymongo (>=3.6.0)", "pymssql (>=2.1.5)", "pyodbc", "pypsrp (>=0.8.0)", "pyspark", "python-arango (>=7.3.2)", "python-dotenv (>=0.21.0)", "python-jenkins (>=1.0.0)", "python-ldap", "python-telegram-bot (>=20.0.0)", "pywinrm (>=0.4)", "redis (>=4.5.2,!=4.5.5,<5.0.0)", "redshift-connector (>=2.0.888)", "requests (>=2.26.0)", "requests (>=2.27,<3)", "requests-kerberos (>=0.10.0)", "requests-toolbelt", "scrapbook", "sendgrid (>=6.0.0)", "sentry-sdk (>=1.32.0,!=1.33.0)", "simple-salesforce (>=1.0.0)", "slack-sdk (>=3.0.0)", "smbprotocol (>=1.5.0)", "snowflake-connector-python (>=2.4.1)", "snowflake-sqlalchemy (>=1.1.0)", "spython (>=0.0.56)", "sqlalchemy-bigquery (>=1.2.1)", "sqlalchemy-drill (>=1.1.0)", "sqlalchemy-spanner (>=1.6.2)", "sqlalchemy-redshift (>=0.8.6)", "sqlparse (>=0.4.2)", "sshtunnel (>=0.3.2)", "statsd (>=3.3.0)", "tableauserverclient", "thrift (>=0.9.2)", "thrift-sasl (>=0.2.0)", "trino (>=0.318.0)", "vertica-python (>=0.5.1)", "virtualenv", "watchtower (>=2.0.1,<2.1.0)", "zenpy (>=2.0.24)", "apache-airflow-providers-airbyte", "apache-airflow-providers-alibaba", "apache-airflow-providers-amazon", "apache-airflow-providers-apache-beam", "apache-airflow-providers-apache-cassandra", "apache-airflow-providers-apache-drill", "apache-airflow-providers-apache-druid", "apache-airflow-providers-apache-flink", "apache-airflow-providers-apache-hdfs", "apache-airflow-providers-apache-hive", "apache-airflow-providers-apache-impala", "apache-airflow-providers-apache-kafka", "apache-airflow-providers-apache-kylin", "apache-airflow-providers-apache-livy", "apache-airflow-providers-apache-pig", "apache-airflow-providers-apache-pinot", "apache-airflow-providers-apache-spark", "apache-airflow-providers-apache-sqoop", "apache-airflow-providers-apprise", "apache-airflow-providers-arangodb", "apache-airflow-providers-asana", "apache-airflow-providers-atlassian-jira", "apache-airflow-providers-celery", "apache-airflow-providers-cloudant", "apache-airflow-providers-cncf-kubernetes", "apache-airflow-providers-common-sql", "apache-airflow-providers-daskexecutor", "apache-airflow-providers-databricks", "apache-airflow-providers-datadog", "apache-airflow-providers-dbt-cloud", "apache-airflow-providers-dingding", "apache-airflow-providers-discord", "apache-airflow-providers-docker", "apache-airflow-providers-elasticsearch", "apache-airflow-providers-exasol", "apache-airflow-providers-facebook", "apache-airflow-providers-ftp", "apache-airflow-providers-github", "apache-airflow-providers-google", "apache-airflow-providers-grpc", "apache-airflow-providers-hashicorp", "apache-airflow-providers-http", "apache-airflow-providers-imap", "apache-airflow-providers-influxdb", "apache-airflow-providers-jdbc", "apache-airflow-providers-jenkins", "apache-airflow-providers-microsoft-azure", "apache-airflow-providers-microsoft-mssql", "apache-airflow-providers-microsoft-psrp", "apache-airflow-providers-microsoft-winrm", "apache-airflow-providers-mongo", "apache-airflow-providers-mysql", "apache-airflow-providers-neo4j", "apache-airflow-providers-odbc", "apache-airflow-providers-openfaas", "apache-airflow-providers-openlineage", "apache-airflow-providers-opensearch", "apache-airflow-providers-opsgenie", "apache-airflow-providers-oracle", "apache-airflow-providers-pagerduty", "apache-airflow-providers-papermill", "apache-airflow-providers-plexus", "apache-airflow-providers-postgres", "apache-airflow-providers-presto", "apache-airflow-providers-redis", "apache-airflow-providers-salesforce", "apache-airflow-providers-samba", "apache-airflow-providers-segment", "apache-airflow-providers-sendgrid", "apache-airflow-providers-sftp", "apache-airflow-providers-singularity", "apache-airflow-providers-slack", "apache-airflow-providers-smtp", "apache-airflow-providers-snowflake", "apache-airflow-providers-sqlite", "apache-airflow-providers-ssh", "apache-airflow-providers-tableau", "apache-airflow-providers-tabular", "apache-airflow-providers-telegram", "apache-airflow-providers-trino", "apache-airflow-providers-vertica", "apache-airflow-providers-zendesk"]
devel = ["filelock", "aiobotocore (>=2.1.1)", "aioresponses", "apache-airflow-providers-common-sql", "apache-airflow (>=2.4.0)", "astroid (>=2.12.3,<3.0)", "aws-xray-sdk", "bcrypt (>=2.0.0)", "beautifulsoup4 (>=4.7.1)", "black", "blinker", "cgroupspy (>=0.2.2)", "checksumdir", "click (>=8.0)", "click (>=8.0,!=8.1.4,!=8.1.5)", "coverage (>=7.2)", "cryptography (>=2.0.0)", "docutils (<0.17.0)", "duckdb (>=0.9.0)", "eralchemy2", "flask-bcrypt (>=0.7.1)", "gitpython", "ipdb", "kubernetes (>=21.7.0,<24)", "mongomock", "moto[cloudformation,glue] (>=4.2.5)", "mypy-boto3-appflow (>=1.28.0)", "mypy-boto3-rds (>=1.28.0)", "mypy-boto3-redshift-data (>=1.28.0)", "mypy-boto3-s3 (>=1.28.0)", "mypy (==1.2.0)", "mysqlclient (>=1.3.6)", "pandas (>=0.17.1)", "pipdeptree", "pre-commit", "pyarrow (>=9.0.0)", "pygithub", "pytest", "pytest-asyncio", "pytest-cov", "pytest-httpx", "pytest-instafail", "pytest-mock", "pytest-rerunfailures", "pytest-timeouts", "pytest-xdist", "pywinrm", "requests-mock", "rich-click (>=1.7.0)", "ruff (>=0.0.219)", "semver", "sphinx-airflow-theme", "sphinx-argparse (>=0.1.13)", "sphinx-autoapi (>=2.0.0)", "sphinx-copybutton", "sphinx-jinja (>=2.0)", "sphinx-rtd-theme (>=0.1.6)", "sphinx (>=5.2.0)", "sphinxcontrib-httpdomain (>=1.7.0)", "sphinxcontrib-redoc (>=1.6.0)", "sphinxcontrib-spelling (>=7.3)", "time-machine", "towncrier", "twine", "types-deprecated", "types-markdown", "types-pymysql", "types-pyyaml", "types-certifi", "types-croniter", "types-docutils", "types-paramiko", "types-protobuf", "types-python-dateutil", "types-python-slugify", "types-pytz", "types-redis", "types-requests", "types-setuptools", "types-tabulate", "types-termcolor", "types-toml", "wheel", "yamllint", "backports.zoneinfo (>=0.2.1)"]
all_dbs = ["aiohttp (>=3.6.3,<4)", "apache-airflow-providers-common-sql (>=1.3.1)", "apache-airflow-providers-common-sql (>=1.5.0)", "apache-airflow (>=2.4.0)", "cassandra-driver (>=3.13.0)", "cloudant (>=2.0)", "databricks-sql-connector (>=2.0.0,<3.0.0)", "dnspython (>=1.13.0)", "hdfs[avro,kerberos,dataframe] (>=2.0.4)", "hmsclient (>=0.1.0)", "impyla (>=0.18.0,<1.0)", "influxdb-client (>=1.19.0)", "mysqlclient (>=1.3.6)", "neo4j (>=4.2.1)", "pandas (>=0.17.1)", "pinotdb (>0.4.7)", "presto-python-client (>=0.8.4)", "psycopg2-binary (>=2.8.0)", "pydruid (>=0.4.1)", "pyexasol (>=0.5.1)", "pyhive[hive_pure_sasl] (>=0.7.0)", "pymongo (>=3.6.0)", "pymssql (>=2.1.5)", "python-arango (>=7.3.2)", "requests (>=2.26.0)", "requests (>=2.27,<3)", "sqlalchemy-drill (>=1.1.0)", "thrift (>=0.9.2)", "trino (>=0.318.0)", "vertica-python (>=0.5.1)", "apache-airflow-providers-apache-cassandra", "apache-airflow-providers-apache-drill", "apache-airflow-providers-apache-druid", "apache-airflow-providers-apache-hdfs", "apache-airflow-providers-apache-hive", "apache-airflow-providers-apache-impala", "apache-airflow-providers-apache-pinot", "apache-airflow-providers-arangodb", "apache-airflow-providers-cloudant", "apache-airflow-providers-databricks", "apache-airflow-providers-exasol", "apache-airflow-providers-influxdb", "apache-airflow-providers-microsoft-mssql", "apache-airflow-providers-mongo", "apache-airflow-providers-mysql", "apache-airflow-providers-neo4j", "apache-airflow-providers-postgres", "apache-airflow-providers-presto", "apache-airflow-providers-trino", "apache-airflow-providers-vertica"]
amazon = ["apache-airflow-providers-amazon"]
"apache.atlas" = ["atlasclient (>=0.1.2)"]
"apache.beam" = ["apache-airflow-providers-apache-beam"]
"apache.cassandra" = ["apache-airflow-providers-apache-cassandra"]
"apache.drill" = ["apache-airflow-providers-apache-drill"]
"apache.druid" = ["apache-airflow-providers-apache-druid"]
devel_ci = ["apprise", "PyGithub (!=1.58)", "pyopenssl", "adal (>=1.2.7)", "aiobotocore (>=2.1.1)", "aiohttp", "aiohttp (>=3.6.3,<4)", "aioresponses", "alibabacloud-adb20211201 (>=1.0.0)", "alibabacloud-tea-openapi (>=0.3.7)", "amqp", "analytics-python (>=1.2.9)", "apache-airflow-providers-common-sql", "apache-airflow (>=2.4.0)", "apache-airflow (>=2.5.0)", "apache-airflow (>=2.7.0)", "apache-beam (>=2.47.0)", "arrow (>=0.16.0)", "asana (>=0.10,<4.0.0)", "asgiref", "asgiref (>=3.5.2)", "astroid (>=2.12.3,<3.0)", "atlasclient (>=0.1.2)", "atlassian-python-api (>=1.14.2)", "attrs (>=22.2)", "authlib (>=1.0.0)", "aws-xray-sdk", "azure-batch (>=8.0.0)", "azure-cosmos (>=4.0.0)", "azure-datalake-store (>=0.0.45)", "azure-identity (>=1.3.1)", "azure-keyvault-secrets (>=4.1.0)", "azure-kusto-data (>=4.1.0)", "azure-mgmt-containerinstance (>=9.0.0)", "azure-mgmt-containerregistry (>=8.0.0)", "azure-mgmt-datafactory (>=2.0.0)", "azure-mgmt-datalake-store (>=0.5.0)", "azure-mgmt-resource (>=2.2.0)", "azure-servicebus (>=7.6.1)", "azure-storage-blob (>=12.14.0)", "azure-storage-common (>=2.1.0)", "azure-storage-file-datalake (>=12.9.1)", "azure-storage-file (>=2.1.0)", "azure-synapse-spark", "bcrypt (>=2.0.0)", "beautifulsoup4 (>=4.7.1)", "black", "blinker", "blinker (>=1.1)", "boto3 (>=1.28.0)", "botocore (>=1.31.0)", "cassandra-driver (>=3.13.0)", "celery (>=5.3.0,!=5.3.2,!=5.3.3,<6)", "cgroupspy (>=0.2.2)", "checksumdir", "click (>=8.0)", "click (>=8.0,!=8.1.4,!=8.1.5)", "cloudant (>=2.0)", "cloudpickle (>=1.4.1)", "confluent-kafka (>=1.8.2)", "coverage (>=7.2)", "cryptography (>=2.0.0)", "dask (>=2.9.0,!=2022.10.1,!=2023.5.0)", "databricks-sql-connector (>=2.0.0,<3.0.0)", "datadog (>=0.14.0)", "distributed (>=2.11.1,!=2023.5.0)", "dnspython (>=1.13.0)", "docker (>=5.0.3)", "docutils (<0.17.0)", "duckdb (>=0.9.0)", "elasticsearch (>8,<9)", "eralchemy2", "eventlet (>=0.33.3)", "facebook-business (>=6.0.2)", "filelock", "flask-appbuilder[oauth] (==4.3.6)", "flask-bcrypt (>=0.7.1)", "flower (>=1.0.0)", "gcloud-aio-auth (>=4.0.0,<5.0.0)", "gcloud-aio-bigquery (>=6.1.2)", "gcloud-aio-storage", "gevent (>=0.13)", "gitpython", "google-ads (>=21.2.0)", "google-api-core (>=2.11.0)", "google-api-python-client (>=1.6.0)", "google-auth-httplib2 (>=0.0.1)", "google-auth (>=1.0.0)", "google-auth (>=1.0.0,<3.0.0)", "google-cloud-aiplatform (>=1.22.1)", "google-cloud-automl (>=2.11.0)", "google-cloud-bigquery-datatransfer (>=3.11.0)", "google-cloud-bigtable (>=2.17.0)", "google-cloud-build (>=3.13.0)", "google-cloud-compute (>=1.10.0)", "google-cloud-container (>=2.17.4)", "google-cloud-datacatalog (>=3.11.1)", "google-cloud-dataflow-client (>=0.8.2)", "google-cloud-dataform (>=0.5.0)", "google-cloud-dataplex (>=1.4.2)", "google-cloud-dataproc-metastore (>=1.12.0)", "google-cloud-dataproc (>=5.4.0)", "google-cloud-dlp (>=3.12.0)", "google-cloud-kms (>=2.15.0)", "google-cloud-language (>=2.9.0)", "google-cloud-logging (>=3.5.0)", "google-cloud-memcache (>=1.7.0)", "google-cloud-monitoring (>=2.14.1)", "google-cloud-orchestration-airflow (>=1.7.0)", "google-cloud-os-login (>=2.9.1)", "google-cloud-pubsub (>=2.15.0)", "google-cloud-redis (>=2.12.0)", "google-cloud-secret-manager (>=2.16.0)", "google-cloud-spanner (>=3.11.1)", "google-cloud-speech (>=2.18.0)", "google-cloud-storage-transfer (>=1.4.1)", "google-cloud-storage (>=2.7.0)", "google-cloud-tasks (>=2.13.0)", "google-cloud-texttospeech (>=2.14.1)", "google-cloud-translate (>=3.11.0)", "google-cloud-videointelligence (>=2.11.0)", "google-cloud-vision (>=3.4.0)", "google-cloud-workflows (>=1.10.0)", "greenlet (>=0.4.9)", "grpcio-gcp (>=0.2.2)", "grpcio (>=1.15.0)", "hdfs[avro,kerberos,dataframe] (>=2.0.4)", "hmsclient (>=0.1.0)", "httpx", "hvac (>=0.10)", "impyla (>=0.18.0,<1.0)", "influxdb-client (>=1.19.0)", "ipdb", "jaydebeapi (>=1.1.1)", "json-merge-patch (>=0.2)", "jsonpath-ng (>=1.5.3)", "kubernetes (>=21.7.0,<24)", "kubernetes-asyncio (>=18.20.1,<25)", "kylinpy (>=2.6)", "ldap3 (>=2.5.1)", "looker-sdk (>=22.2.0)", "mongomock", "moto[cloudformation,glue] (>=4.2.5)", "mypy-boto3-appflow (>=1.28.0)", "mypy-boto3-rds (>=1.28.0)", "mypy-boto3-redshift-data (>=1.28.0)", "mypy-boto3-s3 (>=1.28.0)", "mypy (==1.2.0)", "mysqlclient (>=1.3.6)", "neo4j (>=4.2.1)", "openlineage-integration-common (>=0.28.0)", "openlineage-python (>=0.28.0)", "opensearch-py (>=2.2.0)", "opentelemetry-exporter-prometheus", "opsgenie-sdk (>=2.1.5)", "oracledb (>=1.0.0)", "oss2 (>=2.14.0)", "pandas-gbq", "pandas (>=0.17.1)", "papermill[all] (>=1.2.1)", "paramiko (>=2.6.0)", "pdpyras (>=4.1.2)", "pinotdb (>0.4.7)", "pipdeptree", "plyvel", "pre-commit", "presto-python-client (>=0.8.4)", "proto-plus (>=1.19.6)", "psycopg2-binary (>=2.8.0)", "pyarrow (>=9.0.0)", "pydruid (>=0.4.1)", "pyexasol (>=0.5.1)", "pygithub", "pyhive[hive_pure_sasl] (>=0.7.0)", "pykerberos (>=1.1.13)", "pymongo (>=3.6.0)", "pymssql (>=2.1.5)", "pyodbc", "pypsrp (>=0.8.0)", "pyspark", "pytest", "pytest-asyncio", "pytest-cov", "pytest-httpx", "pytest-instafail", "pytest-mock", "pytest-rerunfailures", "pytest-timeouts", "pytest-xdist", "python-arango (>=7.3.2)", "python-dotenv (>=0.21.0)", "python-jenkins (>=1.0.0)", "python-ldap", "python-telegram-bot (>=20.0.0)", "pywinrm", "pywinrm (>=0.4)", "redis (>=4.5.2,!=4.5.5,<5.0.0)", "redshift-connector (>=2.0.888)", "requests (>=2.26.0)", "requests (>=2.27,<3)", "requests-kerberos (>=0.10.0)", "requests-mock", "requests-toolbelt", "rich-click (>=1.7.0)", "ruff (>=0.0.219)", "scrapbook", "semver", "sendgrid (>=6.0.0)", "sentry-sdk (>=1.32.0,!=1.33.0)", "simple-salesforce (>=1.0.0)", "slack-sdk (>=3.0.0)", "smbprotocol (>=1.5.0)", "snowflake-connector-python (>=2.4.1)", "snowflake-sqlalchemy (>=1.1.0)", "sphinx-airflow-theme", "sphinx-argparse (>=0.1.13)", "sphinx-autoapi (>=2.0.0)", "sphinx-copybutton", "sphinx-jinja (>=2.0)", "sphinx-rtd-theme (>=0.1.6)", "sphinx (>=5.2.0)", "sphinxcontrib-httpdomain (>=1.7.0)", "sphinxcontrib-redoc (>=1.6.0)", "sphinxcontrib-spelling (>=7.3)", "spython (>=0.0.56)", "sqlalchemy-bigquery (>=1.2.1)", "sqlalchemy-drill (>=1.1.0)", "sqlalchemy-spanner (>=1.6.2)", "sqlalchemy-redshift (>=0.8.6)", "sqlparse (>=0.4.2)", "sshtunnel (>=0.3.2)", "statsd (>=3.3.0)", "tableauserverclient", "thrift (>=0.9.2)", "thrift-sasl (>=0.2.0)", "time-machine", "towncrier", "trino (>=0.318.0)", "twine", "types-deprecated", "types-markdown", "types-pymysql", "types-pyyaml", "types-certifi", "types-croniter", "types-docutils", "types-paramiko", "types-protobuf", "types-python-dateutil", "types-python-slugify", "types-pytz", "types-redis", "types-requests", "types-setuptools", "types-tabulate", "types-termcolor", "types-toml", "vertica-python (>=0.5.1)", "virtualenv", "watchtower (>=2.0.1,<2.1.0)", "wheel", "yamllint", "zenpy (>=2.0.24)", "apache-airflow-providers-airbyte", "apache-airflow-providers-alibaba", "apache-airflow-providers-amazon", "apache-airflow-providers-apache-beam", "apache-airflow-providers-apache-cassandra", "apache-airflow-providers-apache-drill", "apache-airflow-providers-apache-druid", "apache-airflow-providers-apache-flink", "apache-airflow-providers-apache-hdfs", "apache-airflow-providers-apache-hive", "apache-airflow-providers-apache-impala", "apache-airflow-providers-apache-kafka", "apache-airflow-providers-apache-kylin", "apache-airflow-providers-apache-livy", "apache-airflow-providers-apache-pig", "apache-airflow-providers-apache-pinot", "apache-airflow-providers-apache-spark", "apache-airflow-providers-apache-sqoop", "apache-airflow-providers-apprise", "apache-airflow-providers-arangodb", "apache-airflow-providers-asana", "apache-airflow-providers-atlassian-jira", "apache-airflow-providers-celery", "apache-airflow-providers-cloudant", "apache-airflow-providers-cncf-kubernetes", "apache-airflow-providers-daskexecutor", "apache-airflow-providers-databricks", "apache-airflow-providers-datadog", "apache-airflow-providers-dbt-cloud", "apache-airflow-providers-dingding", "apache-airflow-providers-discord", "apache-airflow-providers-docker", "apache-airflow-providers-elasticsearch", "apache-airflow-providers-exasol", "apache-airflow-providers-facebook", "apache-airflow-providers-ftp", "apache-airflow-providers-github", "apache-airflow-providers-google", "apache-airflow-providers-grpc", "apache-airflow-providers-hashicorp", "apache-airflow-providers-http", "apache-airflow-providers-imap", "apache-airflow-providers-influxdb", "apache-airflow-providers-jdbc", "apache-airflow-providers-jenkins", "apache-airflow-providers-microsoft-azure", "apache-airflow-providers-microsoft-mssql", "apache-airflow-providers-microsoft-psrp", "apache-airflow-providers-microsoft-winrm", "apache-airflow-providers-mongo", "apache-airflow-providers-mysql", "apache-airflow-providers-neo4j", "apache-airflow-providers-odbc", "apache-airflow-providers-openfaas", "apache-airflow-providers-openlineage", "apache-airflow-providers-opensearch", "apache-airflow-providers-opsgenie", "apache-airflow-providers-oracle", "apache-airflow-providers-pagerduty", "apache-airflow-providers-papermill", "apache-airflow-providers-plexus", "apache-airflow-providers-postgres", "apache-airflow-providers-presto", "apache-airflow-providers-redis", "apache-airflow-providers-salesforce", "apache-airflow-providers-samba", "apache-airflow-providers-segment", "apache-airflow-providers-sendgrid", "apache-airflow-providers-sftp", "apache-airflow-providers-singularity", "apache-airflow-providers-slack", "apache-airflow-providers-smtp", "apache-airflow-providers-snowflake", "apache-airflow-providers-sqlite", "apache-airflow-providers-ssh", "apache-airflow-providers-tableau", "apache-airflow-providers-tabular", "apache-airflow-providers-telegram", "apache-airflow-providers-trino", "apache-airflow-providers-vertica", "apache-airflow-providers-zendesk", "backports.zoneinfo (>=0.2.1)"]
"apache.flink" = ["apache-airflow-providers-apache-flink"]
"apache.hdfs" = ["apache-airflow-providers-apache-hdfs"]
"apache.hive" = ["apache-airflow-providers-apache-hive (>=5.1.0)"]
"apache.impala" = ["apache-airflow-providers-apache-impala"]
"apache.kafka" = ["apache-airflow-providers-apache-kafka"]
"apache.kylin" = ["apache-airflow-providers-apache-kylin"]
"apache.livy" = ["apache-airflow-providers-apache-livy"]
"apache.pig" = ["apache-airflow-providers-apache-pig"]
"apache.pinot" = ["apache-airflow-providers-apache-pinot"]
"apache.spark" = ["apache-airflow-providers-apache-spark"]
"apache.sqoop" = ["apache-airflow-providers-apache-sqoop"]
"apache.webhdfs" = ["hdfs[avro,kerberos,dataframe] (>=2.0.4)"]
apprise = ["apache-airflow-providers-apprise"]
arangodb = ["apache-airflow-providers-arangodb"]
asana = ["apache-airflow-providers-asana"]
async = ["eventlet (>=0.33.3)", "gevent (>=0.13)", "greenlet (>=0.4.9)"]
atlas = ["apache-airflow-providers-apache-atlas"]
"atlassian.jira" = ["apache-airflow-providers-atlassian-jira"]
aws = ["apache-airflow-providers-amazon"]
azure = ["apache-airflow-providers-microsoft-azure"]
cassandra = ["apache-airflow-providers-apache-cassandra"]
celery = ["apache-airflow (>=2.4.0)", "celery (>=5.3.0,!=5.3.2,!=5.3.3,<6)", "flower (>=1.0.0)", "apache-airflow-providers-celery"]
cgroups = ["cgroupspy (>=0.2.2)"]
cloudant = ["apache-airflow-providers-cloudant"]
"cncf.kubernetes" = ["apache-airflow (>=2.4.0)", "asgiref (>=3.5.2)", "cryptography (>=2.0.0)", "kubernetes (>=21.7.0,<24)", "kubernetes-asyncio (>=18.20.1,<25)", "apache-airflow-providers-cncf-kubernetes"]
"common.sql" = ["apache-airflow-providers-common-sql"]
dask = ["apache-airflow (>=2.4.0)", "cloudpickle (>=1.4.1)", "dask (>=2.9.0,!=2022.10.1,!=2023.5.0)", "distributed (>=2.11.1,!=2023.5.0)", "apache-airflow-providers-daskexecutor"]
daskexecutor = ["apache-airflow (>=2.4.0)", "cloudpickle (>=1.4.1)", "dask (>=2.9.0,!=2022.10.1,!=2023.5.0)", "distributed (>=2.11.1,!=2023.5.0)", "apache-airflow-providers-daskexecutor"]
databricks = ["apache-airflow-providers-databricks"]
datadog = ["apache-airflow-providers-datadog"]
"dbt.cloud" = ["apache-airflow-providers-dbt-cloud"]
deprecated_api = ["requests (>=2.26.0)"]
devel_all = ["PyGithub (!=1.58)", "pyopenssl", "adal (>=1.2.7)", "aiobotocore (>=2.1.1)", "aiohttp", "aiohttp (>=3.6.3,<4)", "aioresponses", "alibabacloud-adb20211201 (>=1.0.0)", "alibabacloud-tea-openapi (>=0.3.7)", "amqp", "analytics-python (>=1.2.9)", "apache-airflow-providers-common-sql", "apache-airflow (>=2.4.0)", "apache-airflow (>=2.5.0)", "apache-airflow (>=2.7.0)", "apache-beam (>=2.47.0)", "apprise", "arrow (>=0.16.0)", "asana (>=0.10,<4.0.0)", "asgiref", "asgiref (>=3.5.2)", "astroid (>=2.12.3,<3.0)", "atlasclient (>=0.1.2)", "atlassian-python-api (>=1.14.2)", "attrs (>=22.2)", "authlib (>=1.0.0)", "aws-xray-sdk", "azure-batch (>=8.0.0)", "azure-cosmos (>=4.0.0)", "azure-datalake-store (>=0.0.45)", "azure-identity (>=1.3.1)", "azure-keyvault-secrets (>=4.1.0)", "azure-kusto-data (>=4.1.0)", "azure-mgmt-containerinstance (>=9.0.0)", "azure-mgmt-containerregistry (>=8.0.0)", "azure-mgmt-datafactory (>=2.0.0)", "azure-mgmt-datalake-store (>=0.5.0)", "azure-mgmt-resource (>=2.2.0)", "azure-servicebus (>=7.6.1)", "azure-storage-blob (>=12.14.0)", "azure-storage-common (>=2.1.0)", "azure-storage-file-datalake (>=12.9.1)", "azure-storage-file (>=2.1.0)", "azure-synapse-spark", "bcrypt (>=2.0.0)", "beautifulsoup4 (>=4.7.1)", "black", "blinker", "blinker (>=1.1)", "boto3 (>=1.28.0)", "botocore (>=1.31.0)", "cassandra-driver (>=3.13.0)", "celery (>=5.3.0,!=5.3.2,!=5.3.3,<6)", "cgroupspy (>=0.2.2)", "checksumdir", "click (>=8.0)", "click (>=8.0,!=8.1.4,!=8.1.5)", "cloudant (>=2.0)", "cloudpickle (>=1.4.1)", "confluent-kafka (>=1.8.2)", "coverage (>=7.2)", "cryptography (>=2.0.0)", "dask (>=2.9.0,!=2022.10.1,!=2023.5.0)", "databricks-sql-connector (>=2.0.0,<3.0.0)", "datadog (>=0.14.0)", "distributed (>=2.11.1,!=2023.5.0)", "dnspython (>=1.13.0)", "docker (>=5.0.3)", "docutils (<0.17.0)", "duckdb (>=0.9.0)", "elasticsearch (>8,<9)", "eralchemy2", "eventlet (>=0.33.3)", "facebook-business (>=6.0.2)", "filelock", "flask-appbuilder[oauth] (==4.3.6)", "flask-bcrypt (>=0.7.1)", "flower (>=1.0.0)", "gcloud-aio-auth (>=4.0.0,<5.0.0)", "gcloud-aio-bigquery (>=6.1.2)", "gcloud-aio-storage", "gevent (>=0.13)", "gitpython", "google-ads (>=21.2.0)", "google-api-core (>=2.11.0)", "google-api-python-client (>=1.6.0)", "google-auth-httplib2 (>=0.0.1)", "google-auth (>=1.0.0)", "google-auth (>=1.0.0,<3.0.0)", "google-cloud-aiplatform (>=1.22.1)", "google-cloud-automl (>=2.11.0)", "google-cloud-bigquery-datatransfer (>=3.11.0)", "google-cloud-bigtable (>=2.17.0)", "google-cloud-build (>=3.13.0)", "google-cloud-compute (>=1.10.0)", "google-cloud-container (>=2.17.4)", "google-cloud-datacatalog (>=3.11.1)", "google-cloud-dataflow-client (>=0.8.2)", "google-cloud-dataform (>=0.5.0)", "google-cloud-dataplex (>=1.4.2)", "google-cloud-dataproc-metastore (>=1.12.0)", "google-cloud-dataproc (>=5.4.0)", "google-cloud-dlp (>=3.12.0)", "google-cloud-kms (>=2.15.0)", "google-cloud-language (>=2.9.0)", "google-cloud-logging (>=3.5.0)", "google-cloud-memcache (>=1.7.0)", "google-cloud-monitoring (>=2.14.1)", "google-cloud-orchestration-airflow (>=1.7.0)", "google-cloud-os-login (>=2.9.1)", "google-cloud-pubsub (>=2.15.0)", "google-cloud-redis (>=2.12.0)", "google-cloud-secret-manager (>=2.16.0)", "google-cloud-spanner (>=3.11.1)", "google-cloud-speech (>=2.18.0)", "google-cloud-storage-transfer (>=1.4.1)", "google-cloud-storage (>=2.7.0)", "google-cloud-tasks (>=2.13.0)", "google-cloud-texttospeech (>=2.14.1)", "google-cloud-translate (>=3.11.0)", "google-cloud-videointelligence (>=2.11.0)", "google-cloud-vision (>=3.4.0)", "google-cloud-workflows (>=1.10.0)", "greenlet (>=0.4.9)", "grpcio-gcp (>=0.2.2)", "grpcio (>=1.15.0)", "hdfs[avro,kerberos,dataframe] (>=2.0.4)", "hmsclient (>=0.1.0)", "httpx", "hvac (>=0.10)", "impyla (>=0.18.0,<1.0)", "influxdb-client (>=1.19.0)", "ipdb", "jaydebeapi (>=1.1.1)", "json-merge-patch (>=0.2)", "jsonpath-ng (>=1.5.3)", "kubernetes (>=21.7.0,<24)", "kubernetes-asyncio (>=18.20.1,<25)", "kylinpy (>=2.6)", "ldap3 (>=2.5.1)", "looker-sdk (>=22.2.0)", "mongomock", "moto[cloudformation,glue] (>=4.2.5)", "mypy-boto3-appflow (>=1.28.0)", "mypy-boto3-rds (>=1.28.0)", "mypy-boto3-redshift-data (>=1.28.0)", "mypy-boto3-s3 (>=1.28.0)", "mypy (==1.2.0)", "mysqlclient (>=1.3.6)", "neo4j (>=4.2.1)", "openlineage-integration-common (>=0.28.0)", "openlineage-python (>=0.28.0)", "opensearch-py (>=2.2.0)", "opentelemetry-exporter-prometheus", "opsgenie-sdk (>=2.1.5)", "oracledb (>=1.0.0)", "oss2 (>=2.14.0)", "pandas-gbq", "pandas (>=0.17.1)", "papermill[all] (>=1.2.1)", "paramiko (>=2.6.0)", "pdpyras (>=4.1.2)", "pinotdb (>0.4.7)", "pipdeptree", "plyvel", "pre-commit", "presto-python-client (>=0.8.4)", "proto-plus (>=1.19.6)", "psycopg2-binary (>=2.8.0)", "pyarrow (>=9.0.0)", "pydruid (>=0.4.1)", "pyexasol (>=0.5.1)", "pygithub", "pyhive[hive_pure_sasl] (>=0.7.0)", "pykerberos (>=1.1.13)", "pymongo (>=3.6.0)", "pymssql (>=2.1.5)", "pyodbc", "pypsrp (>=0.8.0)", "pyspark", "pytest", "pytest-asyncio", "pytest-cov", "pytest-httpx", "pytest-instafail", "pytest-mock", "pytest-rerunfailures", "pytest-timeouts", "pytest-xdist", "python-arango (>=7.3.2)", "python-dotenv (>=0.21.0)", "python-jenkins (>=1.0.0)", "python-ldap", "python-telegram-bot (>=20.0.0)", "pywinrm", "pywinrm (>=0.4)", "redis (>=4.5.2,!=4.5.5,<5.0.0)", "redshift-connector (>=2.0.888)", "requests (>=2.26.0)", "requests (>=2.27,<3)", "requests-kerberos (>=0.10.0)", "requests-mock", "requests-toolbelt", "rich-click (>=1.7.0)", "ruff (>=0.0.219)", "scrapbook", "semver", "sendgrid (>=6.0.0)", "sentry-sdk (>=1.32.0,!=1.33.0)", "simple-salesforce (>=1.0.0)", "slack-sdk (>=3.0.0)", "smbprotocol (>=1.5.0)", "snowflake-connector-python (>=2.4.1)", "snowflake-sqlalchemy (>=1.1.0)", "sphinx-airflow-theme", "sphinx-argparse (>=0.1.13)", "sphinx-autoapi (>=2.0.0)", "sphinx-copybutton", "sphinx-jinja (>=2.0)", "sphinx-rtd-theme (>=0.1.6)", "sphinx (>=5.2.0)", "sphinxcontrib-httpdomain (>=1.7.0)", "sphinxcontrib-redoc (>=1.6.0)", "sphinxcontrib-spelling (>=7.3)", "spython (>=0.0.56)", "sqlalchemy-bigquery (>=1.2.1)", "sqlalchemy-drill (>=1.1.0)", "sqlalchemy-spanner (>=1.6.2)", "sqlalchemy-redshift (>=0.8.6)", "sqlparse (>=0.4.2)", "sshtunnel (>=0.3.2)", "statsd (>=3.3.0)", "tableauserverclient", "thrift (>=0.9.2)", "thrift-sasl (>=0.2.0)", "time-machine", "towncrier", "trino (>=0.318.0)", "twine", "types-deprecated", "types-markdown", "types-pymysql", "types-pyyaml", "types-certifi", "types-croniter", "types-docutils", "types-paramiko", "types-protobuf", "types-python-dateutil", "types-python-slugify", "types-pytz", "types-redis", "types-requests", "types-setuptools", "types-tabulate", "types-termcolor", "types-toml", "vertica-python (>=0.5.1)", "virtualenv", "watchtower (>=2.0.1,<2.1.0)", "wheel", "yamllint", "zenpy (>=2.0.24)", "apache-airflow-providers-airbyte", "apache-airflow-providers-alibaba", "apache-airflow-providers-amazon", "apache-airflow-providers-apache-beam", "apache-airflow-providers-apache-cassandra", "apache-airflow-providers-apache-drill", "apache-airflow-providers-apache-druid", "apache-airflow-providers-apache-flink", "apache-airflow-providers-apache-hdfs", "apache-airflow-providers-apache-hive", "apache-airflow-providers-apache-impala", "apache-airflow-providers-apache-kafka", "apache-airflow-providers-apache-kylin", "apache-airflow-providers-apache-livy", "apache-airflow-providers-apache-pig", "apache-airflow-providers-apache-pinot", "apache-airflow-providers-apache-spark", "apache-airflow-providers-apache-sqoop", "apache-airflow-providers-apprise", "apache-airflow-providers-arangodb", "apache-airflow-providers-asana", "apache-airflow-providers-atlassian-jira", "apache-airflow-providers-celery", "apache-airflow-providers-cloudant", "apache-airflow-providers-cncf-kubernetes", "apache-airflow-providers-daskexecutor", "apache-airflow-providers-databricks", "apache-airflow-providers-datadog", "apache-airflow-providers-dbt-cloud", "apache-airflow-providers-dingding", "apache-airflow-providers-discord", "apache-airflow-providers-docker", "apache-airflow-providers-elasticsearch", "apache-airflow-providers-exasol", "apache-airflow-providers-facebook", "apache-airflow-providers-ftp", "apache-airflow-providers-github", "apache-airflow-providers-google", "apache-airflow-providers-grpc", "apache-airflow-providers-hashicorp", "apache-airflow-providers-http", "apache-airflow-providers-imap", "apache-airflow-providers-influxdb", "apache-airflow-providers-jdbc", "apache-airflow-providers-jenkins", "apache-airflow-providers-microsoft-azure", "apache-airflow-providers-microsoft-mssql", "apache-airflow-providers-microsoft-psrp", "apache-airflow-providers-microsoft-winrm", "apache-airflow-providers-mongo", "apache-airflow-providers-mysql", "apache-airflow-providers-neo4j", "apache-airflow-providers-odbc", "apache-airflow-providers-openfaas", "apache-airflow-providers-openlineage", "apache-airflow-providers-opensearch", "apache-airflow-providers-opsgenie", "apache-airflow-providers-oracle", "apache-airflow-providers-pagerduty", "apache-airflow-providers-papermill", "apache-airflow-providers-plexus", "apache-airflow-providers-postgres", "apache-airflow-providers-presto", "apache-airflow-providers-redis", "apache-airflow-providers-salesforce", "apache-airflow-providers-samba", "apache-airflow-providers-segment", "apache-airflow-providers-sendgrid", "apache-airflow-providers-sftp", "apache-airflow-providers-singularity", "apache-airflow-providers-slack", "apache-airflow-providers-smtp", "apache-airflow-providers-snowflake", "apache-airflow-providers-sqlite", "apache-airflow-providers-ssh", "apache-airflow-providers-tableau", "apache-airflow-providers-tabular", "apache-airflow-providers-telegram", "apache-airflow-providers-trino", "apache-airflow-providers-vertica", "apache-airflow-providers-zendesk", "backports.zoneinfo (>=0.2.1)"]
devel_hadoop = ["aiobotocore (>=2.1.1)", "aioresponses", "apache-airflow-providers-common-sql", "apache-airflow (>=2.4.0)", "astroid (>=2.12.3,<3.0)", "aws-xray-sdk", "bcrypt (>=2.0.0)", "beautifulsoup4 (>=4.7.1)", "black", "blinker", "cgroupspy (>=0.2.2)", "checksumdir", "click (>=8.0)", "click (>=8.0,!=8.1.4,!=8.1.5)", "coverage (>=7.2)", "cryptography (>=2.0.0)", "docutils (<0.17.0)", "duckdb (>=0.9.0)", "eralchemy2", "filelock", "flask-bcrypt (>=0.7.1)", "gitpython", "hdfs[avro,kerberos,dataframe] (>=2.0.4)", "hmsclient (>=0.1.0)", "impyla (>=0.18.0,<1.0)", "ipdb", "kubernetes (>=21.7.0,<24)", "mongomock", "moto[cloudformation,glue] (>=4.2.5)", "mypy-boto3-appflow (>=1.28.0)", "mypy-boto3-rds (>=1.28.0)", "mypy-boto3-redshift-data (>=1.28.0)", "mypy-boto3-s3 (>=1.28.0)", "mypy (==1.2.0)", "mysqlclient (>=1.3.6)", "pandas (>=0.17.1)", "pipdeptree", "pre-commit", "presto-python-client (>=0.8.4)", "pyarrow (>=9.0.0)", "pygithub", "pyhive[hive_pure_sasl] (>=0.7.0)", "pykerberos (>=1.1.13)", "pytest", "pytest-asyncio", "pytest-cov", "pytest-httpx", "pytest-instafail", "pytest-mock", "pytest-rerunfailures", "pytest-timeouts", "pytest-xdist", "pywinrm", "requests-kerberos (>=0.10.0)", "requests-mock", "rich-click (>=1.7.0)", "ruff (>=0.0.219)", "semver", "sphinx-airflow-theme", "sphinx-argparse (>=0.1.13)", "sphinx-autoapi (>=2.0.0)", "sphinx-copybutton", "sphinx-jinja (>=2.0)", "sphinx-rtd-theme (>=0.1.6)", "sphinx (>=5.2.0)", "sphinxcontrib-httpdomain (>=1.7.0)", "sphinxcontrib-redoc (>=1.6.0)", "sphinxcontrib-spelling (>=7.3)", "thrift (>=0.9.2)", "thrift-sasl (>=0.2.0)", "time-machine", "towncrier", "twine", "types-deprecated", "types-markdown", "types-pymysql", "types-pyyaml", "types-certifi", "types-croniter", "types-docutils", "types-paramiko", "types-protobuf", "types-python-dateutil", "types-python-slugify", "types-pytz", "types-redis", "types-requests", "types-setuptools", "types-tabulate", "types-termcolor", "types-toml", "wheel", "yamllint", "apache-airflow-providers-apache-hdfs", "apache-airflow-providers-apache-hive", "apache-airflow-providers-presto", "apache-airflow-providers-trino", "backports.zoneinfo (>=0.2.1)"]
dingding = ["apache-airflow-providers-dingding"]
discord = ["apache-airflow-providers-discord"]
doc = ["astroid (>=2.12.3,<3.0)", "checksumdir", "click (>=8.0,!=8.1.4,!=8.1.5)", "docutils (<0.17.0)", "eralchemy2", "sphinx-airflow-theme", "sphinx-argparse (>=0.1.13)", "sphinx-autoapi (>=2.0.0)", "sphinx-copybutton", "sphinx-jinja (>=2.0)", "sphinx-rtd-theme (>=0.1.6)", "sphinx (>=5.2.0)", "sphinxcontrib-httpdomain (>=1.7.0)", "sphinxcontrib-redoc (>=1.6.0)", "sphinxcontrib-spelling (>=7.3)"]
doc_gen = ["eralchemy2"]
docker = ["apache-airflow-providers-docker"]
druid = ["apache-airflow-providers-apache-druid"]
elasticsearch = ["apache-airflow-providers-elasticsearch"]
exasol = ["apache-airflow-providers-exasol"]
facebook = ["apache-airflow-providers-facebook"]
ftp = ["apache-airflow-providers-ftp"]
gcp = ["apache-airflow-providers-google"]
gcp_api = ["apache-airflow-providers-google"]
github = ["apache-airflow-providers-github"]
github_enterprise = ["authlib (>=1.0.0)", "flask-appbuilder[oauth] (==4.3.6)"]
google = ["apache-airflow-providers-google"]
google_auth = ["authlib (>=1.0.0)", "flask-appbuilder[oauth] (==4.3.6)"]
grpc = ["apache-airflow-providers-grpc"]
hashicorp = ["apache-airflow-providers-hashicorp"]
hdfs = ["apache-airflow-providers-apache-hdfs"]
hive = ["apache-airflow-providers-apache-hive"]
http = ["apache-airflow-providers-http"]
imap = ["apache-airflow-providers-imap"]
influxdb = ["apache-airflow-providers-influxdb"]
jdbc = ["apache-airflow-providers-jdbc"]
jenkins = ["apache-airflow-providers-jenkins"]
kerberos = ["pykerberos (>=1.1.13)", "requests-kerberos (>=0.10.0)", "thrift-sasl (>=0.2.0)"]
kubernetes = ["apache-airflow (>=2.4.0)", "asgiref (>=3.5.2)", "cryptography (>=2.0.0)", "kubernetes (>=21.7.0,<24)", "kubernetes-asyncio (>=18.20.1,<25)", "apache-airflow-providers-cncf-kubernetes"]
ldap = ["ldap3 (>=2.5.1)", "python-ldap"]
leveldb = ["plyvel"]
"microsoft.azure" = ["apache-airflow-providers-microsoft-azure"]
"microsoft.mssql" = ["apache-airflow-providers-microsoft-mssql"]
"microsoft.psrp" = ["apache-airflow-providers-microsoft-psrp"]
"microsoft.winrm" = ["apache-airflow-providers-microsoft-winrm"]
mongo = ["apache-airflow-providers-mongo"]
mssql = ["apache-airflow-providers-microsoft-mssql"]
mysql = ["apache-airflow-providers-mysql"]
neo4j = ["apache-airflow-providers-neo4j"]
odbc = ["apache-airflow-providers-odbc"]
openfaas = ["apache-airflow-providers-openfaas"]
openlineage = ["apache-airflow-providers-openlineage"]
opensearch = ["apache-airflow-providers-opensearch"]
opsgenie = ["apache-airflow-providers-opsgenie"]
oracle = ["apache-airflow-providers-oracle"]
otel = ["opentelemetry-exporter-prometheus"]
pagerduty = ["apache-airflow-providers-pagerduty"]
pandas = ["pandas (>=0.17.1)", "pyarrow (>=9.0.0)"]
papermill = ["apache-airflow-providers-papermill"]
password = ["bcrypt (>=2.0.0)", "flask-bcrypt (>=0.7.1)"]
pinot = ["apache-airflow-providers-apache-pinot"]
plexus = ["apache-airflow-providers-plexus"]
postgres = ["apache-airflow-providers-postgres"]
presto = ["apache-airflow-providers-presto"]
qds = ["apache-airflow-providers-qubole"]
rabbitmq = ["amqp"]
redis = ["apache-airflow-providers-redis"]
s3 = ["apache-airflow-providers-amazon"]
salesforce = ["apache-airflow-providers-salesforce"]
samba = ["apache-airflow-providers-samba"]
segment = ["apache-airflow-providers-segment"]
sendgrid = ["apache-airflow-providers-sendgrid"]
sentry = ["blinker (>=1.1)", "sentry-sdk (>=1.32.0,!=1.33.0)"]
sftp = ["apache-airflow-providers-sftp"]
singularity = ["apache-airflow-providers-singularity"]
slack = ["apache-airflow-providers-slack"]
smtp = ["apache-airflow-providers-smtp"]
snowflake = ["apache-airflow-providers-snowflake"]
spark = ["apache-airflow-providers-apache-spark"]
sqlite = ["apache-airflow-providers-sqlite"]
ssh = ["apache-airflow-providers-ssh"]
statsd = ["statsd (>=3.3.0)"]
tableau = ["apache-airflow-providers-tableau"]
tabular = ["apache-airflow-providers-tabular"]
telegram = ["apache-airflow-providers-telegram"]
trino = ["apache-airflow-providers-trino"]
vertica = ["apache-airflow-providers-vertica"]
virtualenv = ["virtualenv"]
webhdfs = ["hdfs[avro,kerberos,dataframe] (>=2.0.4)"]
winrm = ["apache-airflow-providers-microsoft-winrm"]
zendesk = ["apache-airflow-providers-zendesk"]

[[package]]
name = "apache-airflow-providers-common-sql"
version = "1.10.0"
description = "Provider package apache-airflow-providers-common-sql for Apache Airflow"
category = "main"
optional = false
python-versions = "~=3.8"

[package.dependencies]
apache-airflow = ">=2.6.0"
sqlparse = ">=0.4.2"

[package.extras]
openlineage = ["apache-airflow-providers-openlineage"]
pandas = ["pandas (>=0.17.1)"]

[[package]]
name = "apache-airflow-providers-databricks"
version = "6.0.0"
description = "Provider package apache-airflow-providers-databricks for Apache Airflow"
category = "main"
optional = false
python-versions = "~=3.8"

[package.dependencies]
aiohttp = ">=3.6.3,<4"
apache-airflow = ">=2.6.0"
apache-airflow-providers-common-sql = ">=1.10.0"
databricks-sql-connector = ">=2.0.0,<2.9.0 || >2.9.0,<3.0.0"
requests = ">=2.27,<3"

[package.extras]
"common.sql" = ["apache-airflow-providers-common-sql"]
sdk = ["databricks-sdk (==0.10.0)"]

[[package]]
name = "apache-airflow-providers-ftp"
version = "3.7.0"
description = "Provider package apache-airflow-providers-ftp for Apache Airflow"
category = "main"
optional = false
python-versions = "~=3.8"

[package.dependencies]
apache-airflow = ">=2.6.0"

[package.extras]
openlineage = ["apache-airflow-providers-openlineage"]

[[package]]
name = "apache-airflow-providers-http"
version = "4.8.0"
description = "Provider package apache-airflow-providers-http for Apache Airflow"
category = "main"
optional = false
python-versions = "~=3.8"

[package.dependencies]
aiohttp = "*"
apache-airflow = ">=2.6.0"
asgiref = "*"
requests = ">=2.26.0"
requests_toolbelt = "*"

[[package]]
name = "apache-airflow-providers-imap"
version = "3.5.0"
description = "Provider package apache-airflow-providers-imap for Apache Airflow"
category = "main"
optional = false
python-versions = "~=3.8"

[package.dependencies]
apache-airflow = ">=2.6.0"

[[package]]
name = "apache-airflow-providers-sqlite"
version = "3.7.0"
description = "Provider package apache-airflow-providers-sqlite for Apache Airflow"
category = "main"
optional = false
python-versions = "~=3.8"

[package.dependencies]
apache-airflow = ">=2.6.0"
apache-airflow-providers-common-sql = ">=1.3.1"

[package.extras]
"common.sql" = ["apache-airflow-providers-common-sql"]

[[package]]
name = "apispec"
version = "6.3.1"
description = "A pluggable API specification generator. Currently supports the OpenAPI Specification (f.k.a. the Swagger specification)."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
packaging = ">=21.3"
PyYAML = {version = ">=3.10", optional = true, markers = "extra == \"yaml\""}

[package.extras]
dev = ["PyYAML (>=3.10)", "prance[osv] (>=0.11)", "marshmallow (>=3.13.0)", "pytest", "flake8 (==5.0.4)", "flake8-bugbear (==22.9.23)", "pre-commit (>=2.4,<3.0)", "mypy (==0.982)", "types-pyyaml", "tox"]
docs = ["marshmallow (>=3.13.0)", "pyyaml (==6.0)", "sphinx (==5.2.3)", "sphinx-issues (==3.0.1)", "sphinx-rtd-theme (==1.0.0)"]
lint = ["flake8 (==5.0.4)", "flake8-bugbear (==22.9.23)", "pre-commit (>=2.4,<3.0)", "mypy (==0.982)", "types-pyyaml"]
marshmallow = ["marshmallow (>=3.18.0)"]
tests = ["PyYAML (>=3.10)", "prance[osv] (>=0.11)", "marshmallow (>=3.13.0)", "pytest"]
validation = ["prance[osv] (>=0.11)"]
yaml = ["PyYAML (>=3.10)"]

[[package]]
name = "argcomplete"
version = "3.2.1"
description = "Bash tab completion for argparse"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
test = ["coverage", "pexpect", "wheel", "ruff", "mypy"]

[[package]]
name = "asgiref"
version = "3.7.2"
description = "ASGI specs, helper code, and adapters"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
typing-extensions = {version = ">=4", markers = "python_version < \"3.11\""}

[package.extras]
tests = ["pytest", "pytest-asyncio", "mypy (>=0.800)"]

[[package]]
name = "async-timeout"
version = "4.0.3"
description = "Timeout context manager for asyncio programs"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "attrs"
version = "23.1.0"
description = "Classes Without Boilerplate"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
cov = ["attrs", "coverage[toml] (>=5.3)"]
dev = ["attrs", "pre-commit"]
docs = ["furo", "myst-parser", "sphinx", "sphinx-notfound-page", "sphinxcontrib-towncrier", "towncrier", "zope-interface"]
tests = ["attrs", "zope-interface"]
tests-no-zope = ["cloudpickle", "hypothesis", "mypy (>=1.1.1)", "pympler", "pytest-mypy-plugins", "pytest-xdist", "pytest (>=4.3.0)"]

[[package]]
name = "babel"
version = "2.13.1"
description = "Internationalization utilities"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
pytz = {version = ">=2015.7", markers = "python_version < \"3.9\""}

[package.extras]
dev = ["pytest (>=6.0)", "pytest-cov", "freezegun (>=1.0,<2.0)"]

[[package]]
name = "backoff"
version = "2.2.1"
description = "Function decoration for backoff and retry"
category = "main"
optional = false
python-versions = ">=3.7,<4.0"

[[package]]
name = "blinker"
version = "1.7.0"
description = "Fast, simple object-to-object and broadcast signaling"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "cachelib"
version = "0.10.2"
description = "A collection of cache libraries in the same API interface."
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "cachetools"
version = "5.3.2"
description = "Extensible memoizing collections and decorators"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "cattrs"
version = "23.2.3"
description = "Composable complex class support for attrs and dataclasses."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
attrs = ">=23.1.0"
exceptiongroup = {version = ">=1.1.1", markers = "python_version < \"3.11\""}
typing-extensions = {version = ">=4.1.0,<4.6.3 || >4.6.3", markers = "python_version < \"3.11\""}

[package.extras]
bson = ["pymongo (>=4.4.0)"]
cbor2 = ["cbor2 (>=5.4.6)"]
msgpack = ["msgpack (>=1.0.5)"]
orjson = ["orjson (>=3.9.2)"]
pyyaml = ["pyyaml (>=6.0)"]
tomlkit = ["tomlkit (>=0.11.8)"]
ujson = ["ujson (>=5.7.0)"]

[[package]]
name = "certifi"
version = "2023.11.17"
description = "Python package for providing Mozilla's CA Bundle."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "cffi"
version = "1.16.0"
description = "Foreign Function Interface for Python calling C code."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
pycparser = "*"

[[package]]
name = "charset-normalizer"
version = "3.3.2"
description = "The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet."
category = "main"
optional = false
python-versions = ">=3.7.0"

[[package]]
name = "click"
version = "8.1.7"
description = "Composable command line interface toolkit"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[[package]]
name = "clickclick"
version = "20.10.2"
description = "Click utility functions"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
click = ">=4.0"
PyYAML = ">=3.11"

[[package]]
name = "colorama"
version = "0.4.6"
description = "Cross-platform colored terminal text."
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7"

[[package]]
name = "colorlog"
version = "4.8.0"
description = "Log formatting with colors!"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
colorama = {version = "*", markers = "sys_platform == \"win32\""}

[[package]]
name = "configupdater"
version = "3.2"
description = "Parser like ConfigParser but for updating configuration files"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
testing = ["sphinx", "flake8", "pytest", "pytest-cov", "pytest-xdist", "pytest-randomly"]

[[package]]
name = "connexion"
version = "2.14.2"
description = "Connexion - API first applications with OpenAPI/Swagger and Flask"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
clickclick = ">=1.2,<21"
flask = ">=1.0.4,<2.3"
inflection = ">=0.3.1,<0.6"
itsdangerous = ">=0.24"
jsonschema = ">=2.5.1,<5"
packaging = ">=20"
PyYAML = ">=5.1,<7"
requests = ">=2.9.1,<3"
werkzeug = ">=1.0,<2.3"

[package.extras]
aiohttp = ["aiohttp (>=2.3.10,<4)", "aiohttp-jinja2 (>=0.14.0,<2)", "MarkupSafe (>=0.23)"]
docs = ["sphinx-autoapi (==1.8.1)"]
flask = ["flask (>=1.0.4,<2.3)", "itsdangerous (>=0.24)"]
swagger-ui = ["swagger-ui-bundle (>=0.0.2,<0.1)"]
tests = ["decorator (>=5,<6)", "pytest (>=6,<7)", "pytest-cov (>=2,<3)", "testfixtures (>=6,<7)", "flask (>=1.0.4,<2.3)", "itsdangerous (>=0.24)", "swagger-ui-bundle (>=0.0.2,<0.1)", "aiohttp (>=2.3.10,<4)", "aiohttp-jinja2 (>=0.14.0,<2)", "MarkupSafe (>=0.23)", "pytest-aiohttp", "aiohttp-remotes"]

[[package]]
name = "cron-descriptor"
version = "1.4.0"
description = "A Python library that converts cron expressions into human readable strings."
category = "main"
optional = false
python-versions = "*"

[package.extras]
dev = ["polib"]

[[package]]
name = "croniter"
version = "2.0.1"
description = "croniter provides iteration for datetime object with cron like format"
category = "main"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.dependencies]
python-dateutil = "*"
pytz = ">2021.1"

[[package]]
name = "cryptography"
version = "41.0.7"
description = "cryptography is a package which provides cryptographic recipes and primitives to Python developers."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
cffi = ">=1.12"

[package.extras]
docs = ["sphinx (>=5.3.0)", "sphinx-rtd-theme (>=1.1.1)"]
docstest = ["pyenchant (>=1.6.11)", "twine (>=1.12.0)", "sphinxcontrib-spelling (>=4.0.1)"]
nox = ["nox"]
pep8test = ["black", "ruff", "mypy", "check-sdist"]
sdist = ["build"]
ssh = ["bcrypt (>=3.1.5)"]
test = ["pytest (>=6.2.0)", "pytest-benchmark", "pytest-cov", "pytest-xdist", "pretend"]
test-randomorder = ["pytest-randomly"]

[[package]]
name = "databricks-sdk"
version = "0.14.0"
description = "Databricks SDK for Python (Beta)"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-auth = ">=2.0,<3.0"
requests = ">=2.28.1,<3"

[package.extras]
dev = ["autoflake", "ipython", "ipywidgets", "isort", "pycodestyle", "pyfakefs", "pytest", "pytest-cov", "pytest-mock", "pytest-xdist", "requests-mock", "wheel", "yapf"]
notebook = ["ipython (>=8,<9)", "ipywidgets (>=8,<9)"]

[[package]]
name = "databricks-sql-connector"
version = "2.9.3"
description = "Databricks SQL Connector for Python"
category = "main"
optional = false
python-versions = ">=3.7.1,<4.0.0"

[package.dependencies]
alembic = ">=1.0.11,<2.0.0"
lz4 = ">=4.0.2,<5.0.0"
numpy = {version = ">=1.16.6", markers = "python_version >= \"3.7\" and python_version < \"3.11\""}
oauthlib = ">=3.1.0,<4.0.0"
openpyxl = ">=3.0.10,<4.0.0"
pandas = {version = ">=1.2.5,<3.0.0", markers = "python_version >= \"3.8\""}
pyarrow = {version = ">=6.0.0", markers = "python_version >= \"3.7\" and python_version < \"3.11\""}
requests = ">=2.18.1,<3.0.0"
sqlalchemy = ">=1.3.24,<2.0.0"
thrift = ">=0.16.0,<0.17.0"
urllib3 = ">=1.0"

[[package]]
name = "dbt-core"
version = "1.7.3"
description = "With dbt, data analysts and engineers can build analytics the way engineers build applications."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
agate = ">=1.7.0,<1.8.0"
cffi = ">=1.9,<2.0.0"
click = ">=8.0.2,<9"
colorama = ">=0.3.9,<0.5"
dbt-extractor = ">=0.5.0,<0.6.0"
dbt-semantic-interfaces = ">=0.4.0,<0.5.0"
idna = ">=2.5,<4"
isodate = ">=0.6,<0.7"
Jinja2 = ">=3.1.2,<3.2.0"
jsonschema = ">=3.0"
logbook = ">=1.5,<1.6"
mashumaro = {version = ">=3.9,<4.0", extras = ["msgpack"]}
minimal-snowplow-tracker = ">=0.0.2,<0.1.0"
networkx = ">=2.3,<4"
packaging = ">20.9"
pathspec = ">=0.9,<0.12"
protobuf = ">=4.0.0"
pytz = ">=2015.7"
pyyaml = ">=6.0"
requests = "<3.0.0"
sqlparse = ">=0.2.3,<0.5"
typing-extensions = ">=3.7.4"
urllib3 = ">=1.0,<2.0"

[[package]]
name = "dbt-databricks"
version = "1.7.2"
description = "The Databricks adapter plugin for dbt"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
databricks-sdk = ">=0.9.0"
databricks-sql-connector = ">=2.9.3,<3.0.0"
dbt-spark = "1.7.1"
keyring = ">=23.13.0"

[[package]]
name = "dbt-extractor"
version = "0.5.1"
description = "A tool to analyze and extract information from Jinja used in dbt projects."
category = "main"
optional = false
python-versions = ">=3.6.1"

[[package]]
name = "dbt-semantic-interfaces"
version = "0.4.1"
description = "The shared semantic layer definitions that dbt-core and MetricFlow use"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
click = ">=7.0,<9.0"
importlib-metadata = ">=6.0,<7.0"
jinja2 = ">=3.0,<4.0"
jsonschema = ">=4.0,<5.0"
more-itertools = ">=8.0,<11.0"
pydantic = ">=1.10,<2.0"
python-dateutil = ">=2.0,<3.0"
pyyaml = ">=6.0,<7.0"
typing-extensions = ">=4.4,<5.0"

[[package]]
name = "dbt-spark"
version = "1.7.1"
description = "The Apache Spark adapter plugin for dbt"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
dbt-core = ">=1.7.0,<1.8.0"
sqlparams = ">=3.0.0"

[package.extras]
odbc = ["pyodbc (>=4.0.39,<4.1.0)"]
pyhive = ["PyHive[hive_pure_sasl] (>=0.7.0,<0.8.0)", "thrift (>=0.11.0,<0.17.0)"]
all = ["pyodbc (>=4.0.39,<4.1.0)", "PyHive[hive_pure_sasl] (>=0.7.0,<0.8.0)", "thrift (>=0.11.0,<0.17.0)", "pyspark (>=3.0.0,<4.0.0)"]
session = ["pyspark (>=3.0.0,<4.0.0)"]

[[package]]
name = "deprecated"
version = "1.2.14"
description = "Python @deprecated decorator to deprecate old python classes, functions or methods."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.dependencies]
wrapt = ">=1.10,<2"

[package.extras]
dev = ["tox", "pytest", "pytest-cov", "bump2version (<1)", "sphinx (<2)"]

[[package]]
name = "dill"
version = "0.3.7"
description = "serialize all of Python"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
graph = ["objgraph (>=1.7.2)"]

[[package]]
name = "dnspython"
version = "2.4.2"
description = "DNS toolkit"
category = "main"
optional = false
python-versions = ">=3.8,<4.0"

[package.extras]
doq = ["aioquic (>=0.9.20)"]
dnssec = ["cryptography (>=2.6,<42.0)"]
doh = ["h2 (>=4.1.0)", "httpcore (>=0.17.3)", "httpx (>=0.24.1)"]
idna = ["idna (>=2.1,<4.0)"]
trio = ["trio (>=0.14,<0.23)"]
wmi = ["wmi (>=1.5.1,<2.0.0)"]

[[package]]
name = "docutils"
version = "0.20.1"
description = "Docutils -- Python Documentation Utilities"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "email-validator"
version = "1.3.1"
description = "A robust email address syntax and deliverability validation library."
category = "main"
optional = false
python-versions = ">=3.5"

[package.dependencies]
dnspython = ">=1.15.0"
idna = ">=2.0.0"

[[package]]
name = "et-xmlfile"
version = "1.1.0"
description = "An implementation of lxml.xmlfile for the standard library"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "exceptiongroup"
version = "1.2.0"
description = "Backport of PEP 654 (exception groups)"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
test = ["pytest (>=6)"]

[[package]]
name = "flask"
version = "2.2.5"
description = "A simple framework for building complex web applications."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
click = ">=8.0"
importlib-metadata = {version = ">=3.6.0", markers = "python_version < \"3.10\""}
itsdangerous = ">=2.0"
Jinja2 = ">=3.0"
Werkzeug = ">=2.2.2"

[package.extras]
async = ["asgiref (>=3.2)"]
dotenv = ["python-dotenv"]

[[package]]
name = "flask-appbuilder"
version = "4.3.6"
description = "Simple and rapid application development framework, built on top of Flask. includes detailed security, auto CRUD generation for your models, google charts and much more."
category = "main"
optional = false
python-versions = "~=3.7"

[package.dependencies]
apispec = {version = ">=6.0.0,<7", extras = ["yaml"]}
click = ">=8,<9"
colorama = ">=0.3.9,<1"
email-validator = ">=1.0.5,<2"
Flask = ">=2,<3"
Flask-Babel = ">=1,<3"
Flask-JWT-Extended = ">=4.0.0,<5.0.0"
Flask-Limiter = ">3,<4"
Flask-Login = ">=0.3,<0.7"
Flask-SQLAlchemy = ">=2.4,<3"
Flask-WTF = ">=0.14.2,<2"
jsonschema = ">=3,<5"
marshmallow = ">=3.18.0,<4"
marshmallow-sqlalchemy = ">=0.22.0,<0.27.0"
prison = ">=0.2.1,<1.0.0"
PyJWT = ">=2.0.0,<3.0.0"
python-dateutil = ">=2.3,<3"
SQLAlchemy = "<1.5"
sqlalchemy-utils = ">=0.32.21,<1"
WTForms = "<4"

[package.extras]
jmespath = ["jmespath (>=0.9.5)"]
oauth = ["Authlib (>=0.14,<2.0.0)"]
openid = ["Flask-OpenID (>=1.2.5,<2)"]
talisman = ["flask-talisman (>=1.0.0,<2.0)"]

[[package]]
name = "flask-babel"
version = "2.0.0"
description = "Adds i18n/l10n support to Flask applications"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Babel = ">=2.3"
Flask = "*"
Jinja2 = ">=2.5"
pytz = "*"

[package.extras]
dev = ["pytest", "pytest-mock", "bumpversion", "ghp-import", "sphinx", "pallets-sphinx-themes"]

[[package]]
name = "flask-caching"
version = "2.0.1"
description = "Adds caching support to Flask applications."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
cachelib = ">=0.9.0"
Flask = "<3"

[[package]]
name = "flask-jwt-extended"
version = "4.6.0"
description = "Extended JWT integration with Flask"
category = "main"
optional = false
python-versions = ">=3.7,<4"

[package.dependencies]
Flask = ">=2.0,<4.0"
PyJWT = ">=2.0,<3.0"
Werkzeug = ">=0.14"

[package.extras]
asymmetric_crypto = ["cryptography (>=3.3.1)"]

[[package]]
name = "flask-limiter"
version = "3.5.0"
description = "Rate limiting for flask applications"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
Flask = ">=2"
limits = ">=2.8"
ordered-set = ">4,<5"
rich = ">=12,<14"
typing-extensions = ">=4"

[package.extras]
memcached = ["limits"]
mongodb = ["limits"]
redis = ["limits"]

[[package]]
name = "flask-login"
version = "0.6.3"
description = "User authentication and session management for Flask."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
Flask = ">=1.0.4"
Werkzeug = ">=1.0.1"

[[package]]
name = "flask-session"
version = "0.5.0"
description = "Server-side session support for Flask"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
cachelib = "*"
flask = ">=2.2"

[[package]]
name = "flask-sqlalchemy"
version = "2.5.1"
description = "Adds SQLAlchemy support to your Flask application."
category = "main"
optional = false
python-versions = ">= 2.7, != 3.0.*, != 3.1.*, != 3.2.*, != 3.3.*"

[package.dependencies]
Flask = ">=0.10"
SQLAlchemy = ">=0.8.0"

[[package]]
name = "flask-wtf"
version = "1.2.1"
description = "Form rendering, validation, and CSRF protection for Flask with WTForms."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
flask = "*"
itsdangerous = "*"
wtforms = "*"

[package.extras]
email = ["email-validator"]

[[package]]
name = "frozenlist"
version = "1.4.1"
description = "A list-like structure which implements collections.abc.MutableSequence"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "google-auth"
version = "2.24.0"
description = "Google Authentication Library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
cachetools = ">=2.0.0,<6.0"
pyasn1-modules = ">=0.2.1"
rsa = ">=3.1.4,<5"

[package.extras]
aiohttp = ["aiohttp (>=3.6.2,<4.0.0.dev0)", "requests (>=2.20.0,<3.0.0.dev0)"]
enterprise_cert = ["cryptography (==36.0.2)", "pyopenssl (==22.0.0)"]
pyopenssl = ["pyopenssl (>=20.0.0)", "cryptography (>=38.0.3)"]
reauth = ["pyu2f (>=0.1.5)"]
requests = ["requests (>=2.20.0,<3.0.0.dev0)"]

[[package]]
name = "google-re2"
version = "1.1"
description = "RE2 Python bindings"
category = "main"
optional = false
python-versions = "~=3.8"

[[package]]
name = "googleapis-common-protos"
version = "1.62.0"
description = "Common protobufs used in Google APIs"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
protobuf = ">=3.19.5,<3.20.0 || >3.20.0,<3.20.1 || >3.20.1,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<5.0.0.dev0"

[package.extras]
grpc = ["grpcio (>=1.44.0,<2.0.0.dev0)"]

[[package]]
name = "graphviz"
version = "0.20.1"
description = "Simple Python interface for Graphviz"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
dev = ["tox (>=3)", "flake8", "pep8-naming", "wheel", "twine"]
docs = ["sphinx (>=5)", "sphinx-autodoc-typehints", "sphinx-rtd-theme"]
test = ["pytest (>=7)", "pytest-mock (>=3)", "mock (>=4)", "pytest-cov", "coverage"]

[[package]]
name = "greenlet"
version = "3.0.1"
description = "Lightweight in-process concurrent programming"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["sphinx"]
test = ["objgraph", "psutil"]

[[package]]
name = "grpcio"
version = "1.60.0"
description = "HTTP/2-based RPC framework"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
protobuf = ["grpcio-tools (>=1.60.0)"]

[[package]]
name = "gunicorn"
version = "21.2.0"
description = "WSGI HTTP Server for UNIX"
category = "main"
optional = false
python-versions = ">=3.5"

[package.dependencies]
packaging = "*"

[package.extras]
eventlet = ["eventlet (>=0.24.1)"]
gevent = ["gevent (>=1.4.0)"]
setproctitle = ["setproctitle"]
tornado = ["tornado (>=0.2)"]

[[package]]
name = "h11"
version = "0.14.0"
description = "A pure-Python, bring-your-own-I/O implementation of HTTP/1.1"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "httpcore"
version = "1.0.2"
description = "A minimal low-level HTTP client."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
certifi = "*"
h11 = ">=0.13,<0.15"

[package.extras]
asyncio = ["anyio (>=4.0,<5.0)"]
http2 = ["h2 (>=3,<5)"]
socks = ["socksio (>=1.0.0,<2.0.0)"]
trio = ["trio (>=0.22.0,<0.23.0)"]

[[package]]
name = "httpx"
version = "0.26.0"
description = "The next generation HTTP client."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
anyio = "*"
certifi = "*"
httpcore = ">=1.0.0,<2.0.0"
idna = "*"
sniffio = "*"

[package.extras]
brotli = ["brotli", "brotlicffi"]
cli = ["click (>=8.0.0,<9.0.0)", "pygments (>=2.0.0,<3.0.0)", "rich (>=10,<14)"]
http2 = ["h2 (>=3,<5)"]
socks = ["socksio (>=1.0.0,<2.0.0)"]

[[package]]
name = "idna"
version = "3.6"
description = "Internationalized Domain Names in Applications (IDNA)"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "importlib-metadata"
version = "6.11.0"
description = "Read metadata from Python packages"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
zipp = ">=0.5"

[package.extras]
docs = ["sphinx (>=3.5)", "sphinx (<7.2.5)", "jaraco.packaging (>=9.3)", "rst.linker (>=1.9)", "furo", "sphinx-lint", "jaraco.tidelift (>=1.4)"]
perf = ["ipython"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "pytest-cov", "pytest-enabler (>=2.2)", "pytest-ruff", "packaging", "pyfakefs", "flufl.flake8", "pytest-perf (>=0.9.2)", "pytest-black (>=0.3.7)", "pytest-mypy (>=0.9.1)", "importlib-resources (>=1.3)"]

[[package]]
name = "importlib-resources"
version = "6.1.1"
description = "Read resources from Python packages"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
zipp = {version = ">=3.1.0", markers = "python_version < \"3.10\""}

[package.extras]
docs = ["sphinx (>=3.5)", "sphinx (<7.2.5)", "jaraco.packaging (>=9.3)", "rst.linker (>=1.9)", "furo", "sphinx-lint", "jaraco.tidelift (>=1.4)"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "pytest-cov", "pytest-enabler (>=2.2)", "pytest-ruff", "zipp (>=3.17)", "pytest-black (>=0.3.7)", "pytest-mypy (>=0.9.1)"]

[[package]]
name = "inflection"
version = "0.5.1"
description = "A port of Ruby on Rails inflector to Python"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "isodate"
version = "0.6.1"
description = "An ISO 8601 date/time/duration parser and formatter"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = "*"

[[package]]
name = "itsdangerous"
version = "2.1.2"
description = "Safely pass data to untrusted environments and back."
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "jaraco.classes"
version = "3.3.0"
description = "Utility functions for Python class constructs"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
more-itertools = "*"

[package.extras]
docs = ["sphinx (>=3.5)", "jaraco.packaging (>=9.3)", "rst.linker (>=1.9)", "furo", "sphinx-lint", "jaraco.tidelift (>=1.4)"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "pytest-cov", "pytest-enabler (>=2.2)", "pytest-ruff", "pytest-black (>=0.3.7)", "pytest-mypy (>=0.9.1)"]

[[package]]
name = "jeepney"
version = "0.8.0"
description = "Low-level, pure Python DBus protocol wrapper."
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
test = ["pytest", "pytest-trio", "pytest-asyncio (>=0.17)", "testpath", "trio", "async-timeout"]
trio = ["trio", "async-generator"]

[[package]]
name = "jinja2"
version = "3.1.2"
description = "A very fast and expressive template engine."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
MarkupSafe = ">=2.0"

[package.extras]
i18n = ["Babel (>=2.7)"]

[[package]]
name = "jsonschema"
version = "4.20.0"
description = "An implementation of JSON Schema validation for Python"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
attrs = ">=22.2.0"
importlib-resources = {version = ">=1.4.0", markers = "python_version < \"3.9\""}
jsonschema-specifications = ">=2023.03.6"
pkgutil-resolve-name = {version = ">=1.3.10", markers = "python_version < \"3.9\""}
referencing = ">=0.28.4"
rpds-py = ">=0.7.1"

[package.extras]
format = ["fqdn", "idna", "isoduration", "jsonpointer (>1.13)", "rfc3339-validator", "rfc3987", "uri-template", "webcolors (>=1.11)"]
format-nongpl = ["fqdn", "idna", "isoduration", "jsonpointer (>1.13)", "rfc3339-validator", "rfc3986-validator (>0.1.0)", "uri-template", "webcolors (>=1.11)"]

[[package]]
name = "jsonschema-specifications"
version = "2023.11.2"
description = "The JSON Schema meta-schemas and vocabularies, exposed as a Registry"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
importlib-resources = {version = ">=1.4.0", markers = "python_version < \"3.9\""}
referencing = ">=0.31.0"

[[package]]
name = "keyring"
version = "24.3.0"
description = "Store and access your passwords safely."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
importlib-metadata = {version = ">=4.11.4", markers = "python_version < \"3.12\""}
importlib-resources = {version = "*", markers = "python_version < \"3.9\""}
"jaraco.classes" = "*"
jeepney = {version = ">=0.4.2", markers = "sys_platform == \"linux\""}
pywin32-ctypes = {version = ">=0.2.0", markers = "sys_platform == \"win32\""}
SecretStorage = {version = ">=3.2", markers = "sys_platform == \"linux\""}

[package.extras]
completion = ["shtab (>=1.1.0)"]
docs = ["sphinx (>=3.5)", "sphinx (<7.2.5)", "jaraco.packaging (>=9.3)", "rst.linker (>=1.9)", "furo", "sphinx-lint", "jaraco.tidelift (>=1.4)"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "pytest-cov", "pytest-enabler (>=2.2)", "pytest-ruff", "pytest-black (>=0.3.7)", "pytest-mypy (>=0.9.1)"]

[[package]]
name = "lazy-object-proxy"
version = "1.10.0"
description = "A fast and thorough lazy object proxy."
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "leather"
version = "0.3.4"
description = "Python charting for 80% of humans."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = ">=1.6.1"

[[package]]
name = "limits"
version = "3.7.0"
description = "Rate limiting utilities"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
deprecated = ">=1.2"
importlib-resources = ">=1.3"
packaging = ">=21,<24"
typing-extensions = "*"

[package.extras]
all = ["redis (>3,!=4.5.2,!=4.5.3,<6.0.0)", "redis (>=4.2.0,!=4.5.2,!=4.5.3)", "pymemcache (>3,<5.0.0)", "pymongo (>4.1,<5)", "etcd3", "coredis (>=3.4.0,<5)", "motor (>=3,<4)", "aetcd", "emcache (>=0.6.1)", "emcache (>=1)"]
async-etcd = ["aetcd"]
async-memcached = ["emcache (>=0.6.1)", "emcache (>=1)"]
async-mongodb = ["motor (>=3,<4)"]
async-redis = ["coredis (>=3.4.0,<5)"]
etcd = ["etcd3"]
memcached = ["pymemcache (>3,<5.0.0)"]
mongodb = ["pymongo (>4.1,<5)"]
redis = ["redis (>3,!=4.5.2,!=4.5.3,<6.0.0)"]
rediscluster = ["redis (>=4.2.0,!=4.5.2,!=4.5.3)"]

[[package]]
name = "linkify-it-py"
version = "2.0.2"
description = "Links recognition library with FULL unicode support."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
uc-micro-py = "*"

[package.extras]
benchmark = ["pytest", "pytest-benchmark"]
dev = ["pre-commit", "isort", "flake8", "black", "pyproject-flake8"]
doc = ["sphinx", "sphinx-book-theme", "myst-parser"]
test = ["pytest", "coverage", "pytest-cov"]

[[package]]
name = "lockfile"
version = "0.12.2"
description = "Platform-independent file locking module"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "logbook"
version = "1.5.3"
description = "A logging replacement for Python"
category = "main"
optional = false
python-versions = "*"

[package.extras]
all = ["redis", "brotli", "pytest (>4.0)", "execnet (>=1.0.9)", "cython", "pyzmq", "pytest-cov (>=2.6)", "sqlalchemy", "jinja2"]
compression = ["brotli"]
dev = ["pytest-cov (>=2.6)", "pytest (>4.0)", "cython"]
execnet = ["execnet (>=1.0.9)"]
jinja = ["jinja2"]
redis = ["redis"]
sqlalchemy = ["sqlalchemy"]
test = ["pytest-cov (>=2.6)", "pytest (>4.0)"]
zmq = ["pyzmq"]

[[package]]
name = "lz4"
version = "4.3.2"
description = "LZ4 Bindings for Python"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["sphinx (>=1.6.0)", "sphinx-bootstrap-theme"]
flake8 = ["flake8"]
tests = ["pytest (!=3.3.0)", "psutil", "pytest-cov"]

[[package]]
name = "mako"
version = "1.3.0"
description = "A super-fast templating language that borrows the best ideas from the existing templating languages."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
MarkupSafe = ">=0.9.2"

[package.extras]
babel = ["babel"]
lingua = ["lingua"]
testing = ["pytest"]

[[package]]
name = "markdown"
version = "3.5.1"
description = "Python implementation of John Gruber's Markdown."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
importlib-metadata = {version = ">=4.4", markers = "python_version < \"3.10\""}

[package.extras]
docs = ["mkdocs (>=1.5)", "mkdocs-nature (>=0.6)", "mdx-gh-links (>=0.2)", "mkdocstrings", "mkdocs-gen-files", "mkdocs-section-index", "mkdocs-literate-nav"]
testing = ["coverage", "pyyaml"]

[[package]]
name = "markdown-it-py"
version = "3.0.0"
description = "Python port of markdown-it. Markdown parsing, done right!"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
mdurl = ">=0.1,<1.0"

[package.extras]
benchmarking = ["psutil", "pytest", "pytest-benchmark"]
code_style = ["pre-commit (>=3.0,<4.0)"]
compare = ["commonmark (>=0.9,<1.0)", "markdown (>=3.4,<4.0)", "mistletoe (>=1.0,<2.0)", "mistune (>=2.0,<3.0)", "panflute (>=2.3,<3.0)"]
linkify = ["linkify-it-py (>=1,<3)"]
plugins = ["mdit-py-plugins"]
profiling = ["gprof2dot"]
rtd = ["mdit-py-plugins", "myst-parser", "pyyaml", "sphinx", "sphinx-copybutton", "sphinx-design", "sphinx-book-theme", "jupyter-sphinx"]
testing = ["coverage", "pytest", "pytest-cov", "pytest-regressions"]

[[package]]
name = "markupsafe"
version = "2.1.3"
description = "Safely add untrusted strings to HTML/XML markup."
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "marshmallow"
version = "3.20.1"
description = "A lightweight library for converting complex datatypes to and from native Python datatypes."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
packaging = ">=17.0"

[package.extras]
dev = ["pytest", "pytz", "simplejson", "mypy (==1.4.1)", "flake8 (==6.0.0)", "flake8-bugbear (==23.7.10)", "pre-commit (>=2.4,<4.0)", "tox"]
docs = ["sphinx (==7.0.1)", "sphinx-issues (==3.0.1)", "alabaster (==0.7.13)", "sphinx-version-warning (==1.1.2)", "autodocsumm (==0.2.11)"]
lint = ["mypy (==1.4.1)", "flake8 (==6.0.0)", "flake8-bugbear (==23.7.10)", "pre-commit (>=2.4,<4.0)"]
tests = ["pytest", "pytz", "simplejson"]

[[package]]
name = "marshmallow-oneofschema"
version = "3.0.1"
description = "marshmallow multiplexing schema"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
marshmallow = ">=3.0.0,<4.0.0"

[package.extras]
dev = ["pytest", "mock", "flake8 (==3.9.2)", "flake8-bugbear (==21.4.3)", "pre-commit (>=2.7,<3.0)", "tox"]
lint = ["flake8 (==3.9.2)", "flake8-bugbear (==21.4.3)", "pre-commit (>=2.7,<3.0)"]
tests = ["pytest", "mock"]

[[package]]
name = "marshmallow-sqlalchemy"
version = "0.26.1"
description = "SQLAlchemy integration with the marshmallow (de)serialization library"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
marshmallow = ">=3.0.0"
SQLAlchemy = ">=1.2.0"

[package.extras]
dev = ["pytest", "pytest-lazy-fixture", "flake8 (==3.9.2)", "flake8-bugbear (==21.4.3)", "pre-commit (>=2.0,<3.0)", "tox"]
docs = ["sphinx (==4.0.2)", "alabaster (==0.7.12)", "sphinx-issues (==1.2.0)"]
lint = ["flake8 (==3.9.2)", "flake8-bugbear (==21.4.3)", "pre-commit (>=2.0,<3.0)"]
tests = ["pytest", "pytest-lazy-fixture"]

[[package]]
name = "mashumaro"
version = "3.11"
description = "Fast and well tested serialization library"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
msgpack = {version = ">=0.5.6", optional = true, markers = "extra == \"msgpack\""}
typing-extensions = ">=4.1.0"

[package.extras]
msgpack = ["msgpack (>=0.5.6)"]
orjson = ["orjson"]
toml = ["tomli-w (>=1.0)", "tomli (>=1.1.0)"]
yaml = ["pyyaml (>=3.13)"]

[[package]]
name = "mdit-py-plugins"
version = "0.4.0"
description = "Collection of plugins for markdown-it-py"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
markdown-it-py = ">=1.0.0,<4.0.0"

[package.extras]
code_style = ["pre-commit"]
rtd = ["myst-parser", "sphinx-book-theme"]
testing = ["coverage", "pytest", "pytest-cov", "pytest-regressions"]

[[package]]
name = "mdurl"
version = "0.1.2"
description = "Markdown URL utilities"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "minimal-snowplow-tracker"
version = "0.0.2"
description = "A minimal snowplow event tracker for Python. Add analytics to your Python and Django apps, webapps and games"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
requests = ">=2.2.1,<3.0"
six = ">=1.9.0,<2.0"

[[package]]
name = "more-itertools"
version = "10.1.0"
description = "More routines for operating on iterables, beyond itertools"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "msgpack"
version = "1.0.7"
description = "MessagePack serializer"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "multidict"
version = "6.0.4"
description = "multidict implementation"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "networkx"
version = "3.1"
description = "Python package for creating and manipulating graphs and networks"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
default = ["numpy (>=1.20)", "scipy (>=1.8)", "matplotlib (>=3.4)", "pandas (>=1.3)"]
developer = ["pre-commit (>=3.2)", "mypy (>=1.1)"]
doc = ["sphinx (>=6.1)", "pydata-sphinx-theme (>=0.13)", "sphinx-gallery (>=0.12)", "numpydoc (>=1.5)", "pillow (>=9.4)", "nb2plots (>=0.6)", "texext (>=0.6.7)"]
extra = ["lxml (>=4.6)", "pygraphviz (>=1.10)", "pydot (>=1.4.2)", "sympy (>=1.10)"]
test = ["pytest (>=7.2)", "pytest-cov (>=4.0)", "codecov (>=2.1)"]

[[package]]
name = "numpy"
version = "1.24.4"
description = "Fundamental package for array computing in Python"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "oauthlib"
version = "3.2.2"
description = "A generic, spec-compliant, thorough implementation of the OAuth request-signing logic"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
rsa = ["cryptography (>=3.0.0)"]
signals = ["blinker (>=1.4.0)"]
signedtoken = ["cryptography (>=3.0.0)", "pyjwt (>=2.0.0,<3)"]

[[package]]
name = "openpyxl"
version = "3.1.2"
description = "A Python library to read/write Excel 2010 xlsx/xlsm files"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
et-xmlfile = "*"

[[package]]
name = "opentelemetry-api"
version = "1.22.0"
description = "OpenTelemetry Python API"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
deprecated = ">=1.2.6"
importlib-metadata = ">=6.0,<7.0"

[[package]]
name = "opentelemetry-exporter-otlp"
version = "1.22.0"
description = "OpenTelemetry Collector Exporters"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
opentelemetry-exporter-otlp-proto-grpc = "1.22.0"
opentelemetry-exporter-otlp-proto-http = "1.22.0"

[[package]]
name = "opentelemetry-exporter-otlp-proto-common"
version = "1.22.0"
description = "OpenTelemetry Protobuf encoding"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
backoff = {version = ">=1.10.0,<3.0.0", markers = "python_version >= \"3.7\""}
opentelemetry-proto = "1.22.0"

[[package]]
name = "opentelemetry-exporter-otlp-proto-grpc"
version = "1.22.0"
description = "OpenTelemetry Collector Protobuf over gRPC Exporter"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
backoff = {version = ">=1.10.0,<3.0.0", markers = "python_version >= \"3.7\""}
deprecated = ">=1.2.6"
googleapis-common-protos = ">=1.52,<2.0"
grpcio = ">=1.0.0,<2.0.0"
opentelemetry-api = ">=1.15,<2.0"
opentelemetry-exporter-otlp-proto-common = "1.22.0"
opentelemetry-proto = "1.22.0"
opentelemetry-sdk = ">=1.22.0,<1.23.0"

[package.extras]
test = ["pytest-grpc"]

[[package]]
name = "opentelemetry-exporter-otlp-proto-http"
version = "1.22.0"
description = "OpenTelemetry Collector Protobuf over HTTP Exporter"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
backoff = {version = ">=1.10.0,<3.0.0", markers = "python_version >= \"3.7\""}
deprecated = ">=1.2.6"
googleapis-common-protos = ">=1.52,<2.0"
opentelemetry-api = ">=1.15,<2.0"
opentelemetry-exporter-otlp-proto-common = "1.22.0"
opentelemetry-proto = "1.22.0"
opentelemetry-sdk = ">=1.22.0,<1.23.0"
requests = ">=2.7,<3.0"

[package.extras]
test = ["responses (==0.22.0)"]

[[package]]
name = "opentelemetry-proto"
version = "1.22.0"
description = "OpenTelemetry Python Proto"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
protobuf = ">=3.19,<5.0"

[[package]]
name = "opentelemetry-sdk"
version = "1.22.0"
description = "OpenTelemetry Python SDK"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
opentelemetry-api = "1.22.0"
opentelemetry-semantic-conventions = "0.43b0"
typing-extensions = ">=3.7.4"

[[package]]
name = "opentelemetry-semantic-conventions"
version = "0.43b0"
description = "OpenTelemetry Semantic Conventions"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "ordered-set"
version = "4.1.0"
description = "An OrderedSet is a custom MutableSet that remembers its order, so that every"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
dev = ["pytest", "black", "mypy"]

[[package]]
name = "packaging"
version = "23.2"
description = "Core utilities for Python packages"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "pandas"
version = "2.0.3"
description = "Powerful data structures for data analysis, time series, and statistics"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
numpy = {version = ">=1.20.3", markers = "python_version < \"3.10\""}
python-dateutil = ">=2.8.2"
pytz = ">=2020.1"
tzdata = ">=2022.1"

[package.extras]
all = ["beautifulsoup4 (>=4.9.3)", "bottleneck (>=1.3.2)", "brotlipy (>=0.7.0)", "fastparquet (>=0.6.3)", "fsspec (>=2021.07.0)", "gcsfs (>=2021.07.0)", "html5lib (>=1.1)", "hypothesis (>=6.34.2)", "jinja2 (>=3.0.0)", "lxml (>=4.6.3)", "matplotlib (>=3.6.1)", "numba (>=0.53.1)", "numexpr (>=2.7.3)", "odfpy (>=1.4.1)", "openpyxl (>=3.0.7)", "pandas-gbq (>=0.15.0)", "psycopg2 (>=2.8.6)", "pyarrow (>=7.0.0)", "pymysql (>=1.0.2)", "PyQt5 (>=5.15.1)", "pyreadstat (>=1.1.2)", "pytest (>=7.3.2)", "pytest-xdist (>=2.2.0)", "pytest-asyncio (>=0.17.0)", "python-snappy (>=0.6.0)", "pyxlsb (>=1.0.8)", "qtpy (>=2.2.0)", "scipy (>=1.7.1)", "s3fs (>=2021.08.0)", "SQLAlchemy (>=1.4.16)", "tables (>=3.6.1)", "tabulate (>=0.8.9)", "xarray (>=0.21.0)", "xlrd (>=2.0.1)", "xlsxwriter (>=1.4.3)", "zstandard (>=0.15.2)"]
aws = ["s3fs (>=2021.08.0)"]
clipboard = ["PyQt5 (>=5.15.1)", "qtpy (>=2.2.0)"]
compression = ["brotlipy (>=0.7.0)", "python-snappy (>=0.6.0)", "zstandard (>=0.15.2)"]
computation = ["scipy (>=1.7.1)", "xarray (>=0.21.0)"]
excel = ["odfpy (>=1.4.1)", "openpyxl (>=3.0.7)", "pyxlsb (>=1.0.8)", "xlrd (>=2.0.1)", "xlsxwriter (>=1.4.3)"]
feather = ["pyarrow (>=7.0.0)"]
fss = ["fsspec (>=2021.07.0)"]
gcp = ["gcsfs (>=2021.07.0)", "pandas-gbq (>=0.15.0)"]
hdf5 = ["tables (>=3.6.1)"]
html = ["beautifulsoup4 (>=4.9.3)", "html5lib (>=1.1)", "lxml (>=4.6.3)"]
mysql = ["SQLAlchemy (>=1.4.16)", "pymysql (>=1.0.2)"]
output_formatting = ["jinja2 (>=3.0.0)", "tabulate (>=0.8.9)"]
parquet = ["pyarrow (>=7.0.0)"]
performance = ["bottleneck (>=1.3.2)", "numba (>=0.53.1)", "numexpr (>=2.7.1)"]
plot = ["matplotlib (>=3.6.1)"]
postgresql = ["SQLAlchemy (>=1.4.16)", "psycopg2 (>=2.8.6)"]
spss = ["pyreadstat (>=1.1.2)"]
sql-other = ["SQLAlchemy (>=1.4.16)"]
test = ["hypothesis (>=6.34.2)", "pytest (>=7.3.2)", "pytest-xdist (>=2.2.0)", "pytest-asyncio (>=0.17.0)"]
xml = ["lxml (>=4.6.3)"]

[[package]]
name = "parsedatetime"
version = "2.6"
description = "Parse human-readable date/time text."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pathspec"
version = "0.11.2"
description = "Utility library for gitignore style pattern matching of file paths."
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "pendulum"
version = "2.1.2"
description = "Python datetimes made easy"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.dependencies]
python-dateutil = ">=2.6,<3.0"
pytzdata = ">=2020.1"

[[package]]
name = "pkgutil-resolve-name"
version = "1.3.10"
description = "Resolve a name to an object."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "pluggy"
version = "1.3.0"
description = "plugin and hook calling mechanisms for python"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
dev = ["pre-commit", "tox"]
testing = ["pytest", "pytest-benchmark"]

[[package]]
name = "prison"
version = "0.2.1"
description = "Rison encoder/decoder"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = "*"

[package.extras]
dev = ["nose", "pipreqs", "twine"]

[[package]]
name = "protobuf"
version = "4.25.1"
description = ""
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "psutil"
version = "5.9.7"
description = "Cross-platform lib for process and system monitoring in Python."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*"

[package.extras]
test = ["enum34", "ipaddress", "mock", "pywin32", "wmi"]

[[package]]
name = "pyarrow"
version = "14.0.1"
description = "Python library for Apache Arrow"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
numpy = ">=1.16.6"

[[package]]
name = "pyasn1"
version = "0.5.1"
description = "Pure-Python implementation of ASN.1 types and DER/BER/CER codecs (X.208)"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,>=2.7"

[[package]]
name = "pyasn1-modules"
version = "0.3.0"
description = "A collection of ASN.1-based protocols modules"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,>=2.7"

[package.dependencies]
pyasn1 = ">=0.4.6,<0.6.0"

[[package]]
name = "pycparser"
version = "2.21"
description = "C parser in Python"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "pydantic"
version = "1.10.13"
description = "Data validation and settings management using python type hints"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
typing-extensions = ">=4.2.0"

[package.extras]
dotenv = ["python-dotenv (>=0.10.4)"]
email = ["email-validator (>=1.0.3)"]

[[package]]
name = "pygments"
version = "2.17.2"
description = "Pygments is a syntax highlighting package written in Python."
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
plugins = ["importlib-metadata"]
windows-terminal = ["colorama (>=0.4.6)"]

[[package]]
name = "pyjwt"
version = "2.8.0"
description = "JSON Web Token implementation in Python"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
crypto = ["cryptography (>=3.4.0)"]
dev = ["sphinx (>=4.5.0,<5.0.0)", "sphinx-rtd-theme", "zope.interface", "cryptography (>=3.4.0)", "pytest (>=6.0.0,<7.0.0)", "coverage[toml] (==5.0.4)", "pre-commit"]
docs = ["sphinx (>=4.5.0,<5.0.0)", "sphinx-rtd-theme", "zope.interface"]
tests = ["pytest (>=6.0.0,<7.0.0)", "coverage[toml] (==5.0.4)"]

[[package]]
name = "python-daemon"
version = "3.0.1"
description = "Library to implement a well-behaved Unix daemon process."
category = "main"
optional = false
python-versions = ">=3"

[package.dependencies]
docutils = "*"
lockfile = ">=0.10"

[package.extras]
devel = ["coverage", "docutils", "isort", "testscenarios (>=0.4)", "testtools", "twine"]
test = ["coverage", "docutils", "testscenarios (>=0.4)", "testtools"]

[[package]]
name = "python-dateutil"
version = "2.8.2"
description = "Extensions to the standard Python datetime module"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7"

[package.dependencies]
six = ">=1.5"

[[package]]
name = "python-nvd3"
version = "0.15.0"
description = "Python NVD3 - Chart Library for d3.js"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Jinja2 = ">=2.8"
python-slugify = ">=1.2.5"

[[package]]
name = "python-slugify"
version = "8.0.1"
description = "A Python slugify application that also handles Unicode"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
text-unidecode = ">=1.3"

[package.extras]
unidecode = ["Unidecode (>=1.1.1)"]

[[package]]
name = "pytimeparse"
version = "1.1.8"
description = "Time expression parser"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pytz"
version = "2023.3.post1"
description = "World timezone definitions, modern and historical"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pytzdata"
version = "2020.1"
description = "The Olson timezone database for Python."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "pywin32-ctypes"
version = "0.2.2"
description = "A (partial) reimplementation of pywin32 using ctypes/cffi"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "pyyaml"
version = "6.0.1"
description = "YAML parser and emitter for Python"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "referencing"
version = "0.31.1"
description = "JSON Referencing + Python"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
attrs = ">=22.2.0"
rpds-py = ">=0.7.0"

[[package]]
name = "requests"
version = "2.31.0"
description = "Python HTTP for Humans."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
certifi = ">=2017.4.17"
charset-normalizer = ">=2,<4"
idna = ">=2.5,<4"
urllib3 = ">=1.21.1,<3"

[package.extras]
socks = ["PySocks (>=1.5.6,!=1.5.7)"]
use_chardet_on_py3 = ["chardet (>=3.0.2,<6)"]

[[package]]
name = "requests-toolbelt"
version = "1.0.0"
description = "A utility belt for advanced users of python-requests"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.dependencies]
requests = ">=2.0.1,<3.0.0"

[[package]]
name = "rfc3339-validator"
version = "0.1.4"
description = "A pure python RFC3339 validator"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.dependencies]
six = "*"

[[package]]
name = "rich"
version = "13.7.0"
description = "Render rich text, tables, progress bars, syntax highlighting, markdown and more to the terminal"
category = "main"
optional = false
python-versions = ">=3.7.0"

[package.dependencies]
markdown-it-py = ">=2.2.0"
pygments = ">=2.13.0,<3.0.0"
typing-extensions = {version = ">=4.0.0,<5.0", markers = "python_version < \"3.9\""}

[package.extras]
jupyter = ["ipywidgets (>=7.5.1,<9)"]

[[package]]
name = "rich-argparse"
version = "1.4.0"
description = "Rich help formatters for argparse and optparse"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
rich = ">=11.0.0"

[[package]]
name = "rpds-py"
version = "0.13.2"
description = "Python bindings to Rust's persistent data structures (rpds)"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "rsa"
version = "4.9"
description = "Pure-Python RSA implementation"
category = "main"
optional = false
python-versions = ">=3.6,<4"

[package.dependencies]
pyasn1 = ">=0.1.3"

[[package]]
name = "secretstorage"
version = "3.3.3"
description = "Python bindings to FreeDesktop.org Secret Service API"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
cryptography = ">=2.0"
jeepney = ">=0.6"

[[package]]
name = "setproctitle"
version = "1.3.3"
description = "A Python module to customize the process title"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
test = ["pytest"]

[[package]]
name = "six"
version = "1.16.0"
description = "Python 2 and 3 compatibility utilities"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "sniffio"
version = "1.3.0"
description = "Sniff out which async library your code is running under"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "sqlalchemy"
version = "1.4.50"
description = "Database Abstraction Library"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,>=2.7"

[package.dependencies]
greenlet = {version = "!=0.4.17", markers = "python_version >= \"3\" and (platform_machine == \"aarch64\" or platform_machine == \"ppc64le\" or platform_machine == \"x86_64\" or platform_machine == \"amd64\" or platform_machine == \"AMD64\" or platform_machine == \"win32\" or platform_machine == \"WIN32\")"}

[package.extras]
aiomysql = ["greenlet (!=0.4.17)", "aiomysql (>=0.2.0)"]
aiosqlite = ["typing_extensions (!=3.10.0.1)", "greenlet (!=0.4.17)", "aiosqlite"]
asyncio = ["greenlet (!=0.4.17)"]
asyncmy = ["greenlet (!=0.4.17)", "asyncmy (>=0.2.3,!=0.2.4)"]
mariadb_connector = ["mariadb (>=1.0.1,!=1.1.2)"]
mssql = ["pyodbc"]
mssql_pymssql = ["pymssql"]
mssql_pyodbc = ["pyodbc"]
mypy = ["sqlalchemy2-stubs", "mypy (>=0.910)"]
mysql = ["mysqlclient (>=1.4.0,<2)", "mysqlclient (>=1.4.0)"]
mysql_connector = ["mysql-connector-python"]
oracle = ["cx_oracle (>=7,<8)", "cx_oracle (>=7)"]
postgresql = ["psycopg2 (>=2.7)"]
postgresql_asyncpg = ["greenlet (!=0.4.17)", "asyncpg"]
postgresql_pg8000 = ["pg8000 (>=1.16.6,!=1.29.0)"]
postgresql_psycopg2binary = ["psycopg2-binary"]
postgresql_psycopg2cffi = ["psycopg2cffi"]
pymysql = ["pymysql (<1)", "pymysql"]
sqlcipher = ["sqlcipher3-binary"]

[[package]]
name = "sqlalchemy-jsonfield"
version = "1.0.2"
description = "SQLALchemy JSONField implementation for storing dicts at SQL"
category = "main"
optional = false
python-versions = ">=3.7.0"

[package.dependencies]
sqlalchemy = "*"

[[package]]
name = "sqlalchemy-utils"
version = "0.41.1"
description = "Various utility functions for SQLAlchemy."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
SQLAlchemy = ">=1.3"

[package.extras]
arrow = ["arrow (>=0.3.4)"]
babel = ["Babel (>=1.3)"]
color = ["colour (>=0.0.4)"]
encrypted = ["cryptography (>=0.6)"]
intervals = ["intervals (>=0.7.1)"]
password = ["passlib (>=1.6,<2.0)"]
pendulum = ["pendulum (>=2.0.5)"]
phone = ["phonenumbers (>=5.9.2)"]
test = ["pytest (>=2.7.1)", "Pygments (>=1.2)", "Jinja2 (>=2.3)", "docutils (>=0.10)", "flexmock (>=0.9.7)", "psycopg (>=3.1.8)", "psycopg2 (>=2.5.1)", "psycopg2cffi (>=2.8.1)", "pg8000 (>=1.12.4)", "pytz (>=2014.2)", "python-dateutil (>=2.6)", "pymysql", "flake8 (>=2.4.0)", "isort (>=4.2.2)", "pyodbc", "backports.zoneinfo"]
test_all = ["Babel (>=1.3)", "Jinja2 (>=2.3)", "Pygments (>=1.2)", "arrow (>=0.3.4)", "colour (>=0.0.4)", "cryptography (>=0.6)", "docutils (>=0.10)", "flake8 (>=2.4.0)", "flexmock (>=0.9.7)", "furl (>=0.4.1)", "intervals (>=0.7.1)", "isort (>=4.2.2)", "passlib (>=1.6,<2.0)", "pendulum (>=2.0.5)", "pg8000 (>=1.12.4)", "phonenumbers (>=5.9.2)", "psycopg2 (>=2.5.1)", "psycopg2cffi (>=2.8.1)", "psycopg (>=3.1.8)", "pymysql", "pyodbc", "pytest (>=2.7.1)", "python-dateutil", "python-dateutil (>=2.6)", "pytz (>=2014.2)", "backports.zoneinfo"]
timezone = ["python-dateutil"]
url = ["furl (>=0.4.1)"]

[[package]]
name = "sqlparams"
version = "5.1.0"
description = "Convert between various DB API 2.0 parameter styles."
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "sqlparse"
version = "0.4.4"
description = "A non-validating SQL parser."
category = "main"
optional = false
python-versions = ">=3.5"

[package.extras]
dev = ["flake8", "build"]
doc = ["sphinx"]
test = ["pytest", "pytest-cov"]

[[package]]
name = "tabulate"
version = "0.9.0"
description = "Pretty-print tabular data"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
widechars = ["wcwidth"]

[[package]]
name = "tenacity"
version = "8.2.3"
description = "Retry code until it succeeds"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
doc = ["reno", "sphinx", "tornado (>=4.5)"]

[[package]]
name = "termcolor"
version = "2.4.0"
description = "ANSI color formatting for output in terminal"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
tests = ["pytest", "pytest-cov"]

[[package]]
name = "text-unidecode"
version = "1.3"
description = "The most basic Text::Unidecode port"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "thrift"
version = "0.16.0"
description = "Python bindings for the Apache Thrift RPC system"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = ">=1.7.2"

[package.extras]
all = ["tornado (>=4.0)", "twisted"]
tornado = ["tornado (>=4.0)"]
twisted = ["twisted"]

[[package]]
name = "typing-extensions"
version = "4.8.0"
description = "Backported and Experimental Type Hints for Python 3.8+"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "tzdata"
version = "2023.3"
description = "Provider of IANA time zone data"
category = "main"
optional = false
python-versions = ">=2"

[[package]]
name = "uc-micro-py"
version = "1.0.2"
description = "Micro subset of unicode data files for linkify-it-py projects."
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
test = ["pytest", "coverage", "pytest-cov"]

[[package]]
name = "unicodecsv"
version = "0.14.1"
description = "Python2's stdlib csv module is nice, but it doesn't support unicode. This module is a drop-in replacement which *does*."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "urllib3"
version = "1.26.18"
description = "HTTP library with thread-safe connection pooling, file post, and more."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*"

[package.extras]
brotli = ["brotlicffi (>=0.8.0)", "brotli (==1.0.9)", "brotlipy (>=0.6.0)", "brotli (>=1.0.9)"]
secure = ["pyOpenSSL (>=0.14)", "cryptography (>=1.3.4)", "idna (>=2.0.0)", "certifi", "urllib3-secure-extra", "ipaddress"]
socks = ["PySocks (>=1.5.6,!=1.5.7,<2.0)"]

[[package]]
name = "werkzeug"
version = "2.2.3"
description = "The comprehensive WSGI web application library."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
MarkupSafe = ">=2.1.1"

[package.extras]
watchdog = ["watchdog"]

[[package]]
name = "wrapt"
version = "1.16.0"
description = "Module for decorators, wrappers and monkey patching."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "wtforms"
version = "3.0.1"
description = "Form validation and rendering for Python web development."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
MarkupSafe = "*"

[package.extras]
email = ["email-validator"]

[[package]]
name = "yarl"
version = "1.9.4"
description = "Yet another URL library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
idna = ">=2.0"
multidict = ">=4.0"

[[package]]
name = "zipp"
version = "3.17.0"
description = "Backport of pathlib-compatible object wrapper for zip files"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
docs = ["sphinx (>=3.5)", "sphinx (<7.2.5)", "jaraco.packaging (>=9.3)", "rst.linker (>=1.9)", "furo", "sphinx-lint", "jaraco.tidelift (>=1.4)"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "pytest-cov", "pytest-enabler (>=2.2)", "pytest-ruff", "jaraco.itertools", "jaraco.functools", "more-itertools", "big-o", "pytest-ignore-flaky", "pytest-black (>=0.3.7)", "pytest-mypy (>=0.9.1)"]

[metadata]
lock-version = "1.1"
python-versions = "3.8.6"
content-hash = "7c9898272f68fda373772bcd8f79a4cde4e9acc33e5aa67c85758bc9dc501d30"

[metadata.files]
agate = []
aiohttp = []
aiosignal = []
alembic = []
anyio = []
apache-airflow = []
apache-airflow-providers-common-sql = []
apache-airflow-providers-databricks = []
apache-airflow-providers-ftp = []
apache-airflow-providers-http = []
apache-airflow-providers-imap = []
apache-airflow-providers-sqlite = []
apispec = []
argcomplete = []
asgiref = []
async-timeout = []
attrs = []
babel = []
backoff = []
blinker = []
cachelib = []
cachetools = []
cattrs = []
certifi = []
cffi = []
charset-normalizer = []
click = []
clickclick = []
colorama = []
colorlog = []
configupdater = []
connexion = []
cron-descriptor = []
croniter = []
cryptography = []
databricks-sdk = []
databricks-sql-connector = []
dbt-core = []
dbt-databricks = []
dbt-extractor = []
dbt-semantic-interfaces = []
dbt-spark = []
deprecated = []
dill = []
dnspython = []
docutils = []
email-validator = []
et-xmlfile = []
exceptiongroup = []
flask = []
flask-appbuilder = []
flask-babel = []
flask-caching = []
flask-jwt-extended = []
flask-limiter = []
flask-login = []
flask-session = []
flask-sqlalchemy = []
flask-wtf = []
frozenlist = []
google-auth = []
google-re2 = []
googleapis-common-protos = []
graphviz = []
greenlet = []
grpcio = []
gunicorn = []
h11 = []
httpcore = []
httpx = []
idna = []
importlib-metadata = []
importlib-resources = []
inflection = []
isodate = []
itsdangerous = []
"jaraco.classes" = []
jeepney = []
jinja2 = [
    {file = "Jinja2-3.1.2-py3-none-any.whl", hash = "sha256:6088930bfe239f0e6710546ab9c19c9ef35e29792895fed6e6e31a023a182a61"},
    {file = "Jinja2-3.1.2.tar.gz", hash = "sha256:31351a702a408a9e7595a8fc6150fc3f43bb6bf7e319770cbc0db9df9437e852"},
]
jsonschema = []
jsonschema-specifications = []
keyring = []
lazy-object-proxy = []
leather = []
limits = []
linkify-it-py = []
lockfile = []
logbook = []
lz4 = []
mako = []
markdown = []
markdown-it-py = []
markupsafe = []
marshmallow = []
marshmallow-oneofschema = []
marshmallow-sqlalchemy = []
mashumaro = []
mdit-py-plugins = []
mdurl = []
minimal-snowplow-tracker = []
more-itertools = []
msgpack = []
multidict = []
networkx = []
numpy = []
oauthlib = []
openpyxl = []
opentelemetry-api = []
opentelemetry-exporter-otlp = []
opentelemetry-exporter-otlp-proto-common = []
opentelemetry-exporter-otlp-proto-grpc = []
opentelemetry-exporter-otlp-proto-http = []
opentelemetry-proto = []
opentelemetry-sdk = []
opentelemetry-semantic-conventions = []
ordered-set = []
packaging = []
pandas = []
parsedatetime = []
pathspec = []
pendulum = []
pkgutil-resolve-name = []
pluggy = []
prison = []
protobuf = []
psutil = []
pyarrow = []
pyasn1 = []
pyasn1-modules = []
pycparser = [
    {file = "pycparser-2.21-py2.py3-none-any.whl", hash = "sha256:8ee45429555515e1f6b185e78100aea234072576aa43ab53aefcae078162fca9"},
    {file = "pycparser-2.21.tar.gz", hash = "sha256:e644fdec12f7872f86c58ff790da456218b10f863970249516d60a5eaca77206"},
]
pydantic = []
pygments = []
pyjwt = []
python-daemon = []
python-dateutil = [
    {file = "python-dateutil-2.8.2.tar.gz", hash = "sha256:0123cacc1627ae19ddf3c27a5de5bd67ee4586fbdd6440d9748f8abb483d3e86"},
    {file = "python_dateutil-2.8.2-py2.py3-none-any.whl", hash = "sha256:961d03dc3453ebbc59dbdea9e4e11c5651520a876d0f4db161e8674aae935da9"},
]
python-nvd3 = []
python-slugify = []
pytimeparse = []
pytz = []
pytzdata = []
pywin32-ctypes = []
pyyaml = []
referencing = []
requests = []
requests-toolbelt = []
rfc3339-validator = []
rich = []
rich-argparse = []
rpds-py = []
rsa = []
secretstorage = []
setproctitle = []
six = [
    {file = "six-1.16.0-py2.py3-none-any.whl", hash = "sha256:8abb2f1d86890a2dfb989f9a77cfcfd3e47c2a354b01111771326f8aa26e0254"},
    {file = "six-1.16.0.tar.gz", hash = "sha256:1e61c37477a1626458e36f7b1d82aa5c9b094fa4802892072e49de9c60c4c926"},
]
sniffio = []
sqlalchemy = []
sqlalchemy-jsonfield = []
sqlalchemy-utils = []
sqlparams = []
sqlparse = []
tabulate = []
tenacity = []
termcolor = []
text-unidecode = []
thrift = []
typing-extensions = []
tzdata = []
uc-micro-py = []
unicodecsv = []
urllib3 = []
werkzeug = []
wrapt = []
wtforms = []
yarl = []
zipp = []
